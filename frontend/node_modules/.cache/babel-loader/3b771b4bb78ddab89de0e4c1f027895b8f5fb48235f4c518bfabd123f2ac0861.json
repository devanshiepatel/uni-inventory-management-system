{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from \"react\";\n\n// const Notifications = ({ userEmail }) => {\n//   const [notifications, setNotifications] = useState([]);\n\n//   useEffect(() => {\n//     fetch(`http://localhost:8800/notifications/${userEmail}`)\n//       .then((res) => res.json())\n//       .then((data) => setNotifications(data))\n//       .catch((err) => console.error(\"Error fetching notifications:\", err));\n//   }, [userEmail]);\n\n//   const markAsRead = async (id) => {\n//     await fetch(\"http://localhost:8800/notifications/read\", {\n//       method: \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ id }),\n//     });\n//     setNotifications(notifications.filter((n) => n.id !== id));\n//   };\n\n//   // return (\n//   //   <div className=\"notifications-container\">\n//   //     <h3>Notifications</h3>\n//   //     {notifications.length === 0 ? (\n//   //       <p>No new notifications</p>\n//   //     ) : (\n//   //       <ul>\n//   //         {notifications.map((notif) => (\n//   //           <li key={notif.id}>\n//   //             {notif.message}\n//   //             <button onClick={() => markAsRead(notif.id)}>Mark as Read</button>\n//   //           </li>\n//   //         ))}\n//   //       </ul>\n//   //     )}\n//   //   </div>\n//   // );\n//   return (\n//     <div className=\"notifications-container\" style={{ marginTop: \"20px\", width: \"100%\" }}>\n//       <h4 style={{ marginBottom: \"10px\", color: \"#ffffff\" }}>ðŸ”” Notifications</h4>\n//       {notifications.length === 0 ? (\n//         <p style={{ color: \"#9CA3AF\", fontSize: \"14px\" }}>No new notifications</p>\n//       ) : (\n//         <ul style={{ listStyleType: \"none\", padding: 0 }}>\n//           {notifications.map((notif) => (\n//             <li key={notif.id} style={{\n//               backgroundColor: \"#374151\",\n//               color: \"#F9FAFB\",\n//               padding: \"10px\",\n//               borderRadius: \"5px\",\n//               marginBottom: \"10px\",\n//               fontSize: \"13px\"\n//             }}>\n//               {notif.message}\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </div>\n//   );\n\n// };\n\n// export default Notifications;\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  userEmail\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const res = await fetch(`http://localhost:8800/api/notifications/${userEmail}`);\n        if (!res.ok) throw new Error(\"Failed to fetch notifications.\");\n        const data = await res.json();\n        setNotifications(data);\n      } catch (err) {\n        setError(\"Failed to load notifications.\");\n      }\n    };\n    if (userEmail) {\n      fetchNotifications();\n    }\n  }, [userEmail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    style: {\n      marginTop: \"30px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        color: \"#fff\",\n        marginBottom: \"10px\"\n      },\n      children: \"\\uD83D\\uDD14 Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#f87171\",\n        fontSize: \"14px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#9CA3AF\",\n        fontSize: \"14px\"\n      },\n      children: \"No new notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: \"none\",\n        padding: 0\n      },\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          backgroundColor: \"#374151\",\n          color: \"#F9FAFB\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          marginBottom: \"8px\",\n          fontSize: \"13px\"\n        },\n        children: notif.message\n      }, notif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"nVWomN24xJUUSKetrYEwsjOklEA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Notifications","userEmail","_s","notifications","setNotifications","error","setError","fetchNotifications","res","fetch","ok","Error","data","json","err","className","style","marginTop","width","children","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","length","listStyle","padding","map","notif","backgroundColor","borderRadius","message","id","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/frontend/src/pages/Notifications.jsx"],"sourcesContent":["// import { useEffect, useState } from \"react\";\r\n\r\n// const Notifications = ({ userEmail }) => {\r\n//   const [notifications, setNotifications] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     fetch(`http://localhost:8800/notifications/${userEmail}`)\r\n//       .then((res) => res.json())\r\n//       .then((data) => setNotifications(data))\r\n//       .catch((err) => console.error(\"Error fetching notifications:\", err));\r\n//   }, [userEmail]);\r\n\r\n//   const markAsRead = async (id) => {\r\n//     await fetch(\"http://localhost:8800/notifications/read\", {\r\n//       method: \"POST\",\r\n//       headers: { \"Content-Type\": \"application/json\" },\r\n//       body: JSON.stringify({ id }),\r\n//     });\r\n//     setNotifications(notifications.filter((n) => n.id !== id));\r\n//   };\r\n\r\n//   // return (\r\n//   //   <div className=\"notifications-container\">\r\n//   //     <h3>Notifications</h3>\r\n//   //     {notifications.length === 0 ? (\r\n//   //       <p>No new notifications</p>\r\n//   //     ) : (\r\n//   //       <ul>\r\n//   //         {notifications.map((notif) => (\r\n//   //           <li key={notif.id}>\r\n//   //             {notif.message}\r\n//   //             <button onClick={() => markAsRead(notif.id)}>Mark as Read</button>\r\n//   //           </li>\r\n//   //         ))}\r\n//   //       </ul>\r\n//   //     )}\r\n//   //   </div>\r\n//   // );\r\n//   return (\r\n//     <div className=\"notifications-container\" style={{ marginTop: \"20px\", width: \"100%\" }}>\r\n//       <h4 style={{ marginBottom: \"10px\", color: \"#ffffff\" }}>ðŸ”” Notifications</h4>\r\n//       {notifications.length === 0 ? (\r\n//         <p style={{ color: \"#9CA3AF\", fontSize: \"14px\" }}>No new notifications</p>\r\n//       ) : (\r\n//         <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n//           {notifications.map((notif) => (\r\n//             <li key={notif.id} style={{\r\n//               backgroundColor: \"#374151\",\r\n//               color: \"#F9FAFB\",\r\n//               padding: \"10px\",\r\n//               borderRadius: \"5px\",\r\n//               marginBottom: \"10px\",\r\n//               fontSize: \"13px\"\r\n//             }}>\r\n//               {notif.message}\r\n//             </li>\r\n//           ))}\r\n//         </ul>\r\n//       )}\r\n//     </div>\r\n//   );\r\n  \r\n// };\r\n\r\n// export default Notifications;\r\n\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Notifications = ({ userEmail }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:8800/api/notifications/${userEmail}`);\r\n        if (!res.ok) throw new Error(\"Failed to fetch notifications.\");\r\n        const data = await res.json();\r\n        setNotifications(data);\r\n      } catch (err) {\r\n        setError(\"Failed to load notifications.\");\r\n      }\r\n    };\r\n\r\n    if (userEmail) {\r\n      fetchNotifications();\r\n    }\r\n  }, [userEmail]);\r\n\r\n  return (\r\n    <div className=\"notifications-container\" style={{ marginTop: \"30px\", width: \"100%\" }}>\r\n      <h4 style={{ color: \"#fff\", marginBottom: \"10px\" }}>ðŸ”” Notifications</h4>\r\n\r\n      {error ? (\r\n        <p style={{ color: \"#f87171\", fontSize: \"14px\" }}>{error}</p>\r\n      ) : notifications.length === 0 ? (\r\n        <p style={{ color: \"#9CA3AF\", fontSize: \"14px\" }}>No new notifications</p>\r\n      ) : (\r\n        <ul style={{ listStyle: \"none\", padding: 0 }}>\r\n          {notifications.map((notif) => (\r\n            <li key={notif.id} style={{\r\n              backgroundColor: \"#374151\",\r\n              color: \"#F9FAFB\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              marginBottom: \"8px\",\r\n              fontSize: \"13px\"\r\n            }}>\r\n              {notif.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import { jwtDecode } from \"jwt-decode\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import axios from \"axios\";\n\n// import Dashboard from \"./pages/Dashboard\";\n// import SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\n// import Departments from \"./pages/Departments\";\n// import Update from \"./pages/Update\";\n// import Add from \"./pages/Add\";\n// import Login from \"./pages/Login\";\n// import ChangePassword from \"./pages/ChangePassword\";\n\n// const clientId = process.env.REACT_APP_CLIENT_ID;\n\n// function App() {\n//     const [user, setUser] = useState(null);\n//     const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n//     useEffect(() => {\n//         const storedToken = window.localStorage.getItem(\"google_token\");\n//         if (storedToken) {\n//             const decodedUser = jwtDecode(storedToken);\n//             setUser(decodedUser);\n//         }\n//     }, []);\n\n//     const responseGoogle = (res) => {\n//         if (res?.credential) {\n//             const decodedUser = jwtDecode(res.credential);\n//             setUser(decodedUser);\n//             window.localStorage.setItem(\"google_token\", res.credential);\n//         } else {\n//             setUser(null);\n//             window.localStorage.removeItem(\"google_token\");\n//         }\n//     };\n\n//     return (\n//         <GoogleOAuthProvider clientId={clientId}>\n//             <BrowserRouter>\n//                 <div className=\"App\">\n//                     <header className=\"App-header\">\n//                         <Routes>\n//                             <Route path=\"/\" element={<Login responseGoogle={responseGoogle} />} />\n//                             <Route path=\"/dashboard\" element={<Dashboard />} />\n//                             <Route path=\"/superadmin\" element={<SuperAdminDashboard />} />\n//                             <Route path=\"/add\" element={<Add />} />\n//                             <Route path=\"/update/:id\" element={<Update />} />\n//                             <Route path=\"/departments/:faculty_id\" element={<Departments />} />\n//                             <Route path=\"/changepassword\" element={<ChangePassword user_id={userId} />} />\n//                         </Routes>\n//                     </header>\n//                 </div>\n//             </BrowserRouter>\n//         </GoogleOAuthProvider>\n//     );\n// }\n\n// export default App;\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from \"axios\";\nimport Dashboard from \"./pages/Dashboard\";\nimport SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\nimport Departments from \"./pages/Departments\";\nimport Update from \"./pages/Update\";\nimport Add from \"./pages/Add\";\nimport Login from \"./pages/Login\";\nimport ChangePassword from \"./pages/ChangePassword\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n  useEffect(() => {\n    const storedToken = window.localStorage.getItem(\"token\"); // ✅ Use \"token\" instead of \"google_token\"\n    if (storedToken) {\n      const decodedUser = jwtDecode(storedToken);\n      setUser(decodedUser);\n      setUserId(decodedUser.user_id); // ✅ Set user_id on reload\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              setUserId: setUserId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard\",\n            element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/superadmin\",\n            element: /*#__PURE__*/_jsxDEV(SuperAdminDashboard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            element: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/update/:id\",\n            element: /*#__PURE__*/_jsxDEV(Update, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/departments/:faculty_id\",\n            element: /*#__PURE__*/_jsxDEV(Departments, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 73\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/changepassword\",\n            element: /*#__PURE__*/_jsxDEV(ChangePassword, {\n              user_id: userId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"R2F+fCbiQ/IsikQruIY4lfMWXUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Routes","Route","useState","useEffect","jwtDecode","axios","Dashboard","SuperAdminDashboard","Departments","Update","Add","Login","ChangePassword","jsxDEV","_jsxDEV","App","_s","user","setUser","userId","setUserId","storedToken","window","localStorage","getItem","decodedUser","user_id","children","className","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/App.js"],"sourcesContent":["// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import { jwtDecode } from \"jwt-decode\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import axios from \"axios\";\n\n// import Dashboard from \"./pages/Dashboard\";\n// import SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\n// import Departments from \"./pages/Departments\";\n// import Update from \"./pages/Update\";\n// import Add from \"./pages/Add\";\n// import Login from \"./pages/Login\";\n// import ChangePassword from \"./pages/ChangePassword\";\n\n// const clientId = process.env.REACT_APP_CLIENT_ID;\n\n// function App() {\n//     const [user, setUser] = useState(null);\n//     const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n//     useEffect(() => {\n//         const storedToken = window.localStorage.getItem(\"google_token\");\n//         if (storedToken) {\n//             const decodedUser = jwtDecode(storedToken);\n//             setUser(decodedUser);\n//         }\n//     }, []);\n\n//     const responseGoogle = (res) => {\n//         if (res?.credential) {\n//             const decodedUser = jwtDecode(res.credential);\n//             setUser(decodedUser);\n//             window.localStorage.setItem(\"google_token\", res.credential);\n//         } else {\n//             setUser(null);\n//             window.localStorage.removeItem(\"google_token\");\n//         }\n//     };\n\n//     return (\n//         <GoogleOAuthProvider clientId={clientId}>\n//             <BrowserRouter>\n//                 <div className=\"App\">\n//                     <header className=\"App-header\">\n//                         <Routes>\n//                             <Route path=\"/\" element={<Login responseGoogle={responseGoogle} />} />\n//                             <Route path=\"/dashboard\" element={<Dashboard />} />\n//                             <Route path=\"/superadmin\" element={<SuperAdminDashboard />} />\n//                             <Route path=\"/add\" element={<Add />} />\n//                             <Route path=\"/update/:id\" element={<Update />} />\n//                             <Route path=\"/departments/:faculty_id\" element={<Departments />} />\n//                             <Route path=\"/changepassword\" element={<ChangePassword user_id={userId} />} />\n//                         </Routes>\n//                     </header>\n//                 </div>\n//             </BrowserRouter>\n//         </GoogleOAuthProvider>\n//     );\n// }\n\n// export default App;\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { jwtDecode } from \"jwt-decode\";\nimport axios from \"axios\";\n\nimport Dashboard from \"./pages/Dashboard\";\nimport SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\nimport Departments from \"./pages/Departments\";\nimport Update from \"./pages/Update\";\nimport Add from \"./pages/Add\";\nimport Login from \"./pages/Login\";\nimport ChangePassword from \"./pages/ChangePassword\";\n\nfunction App() {\n    const [user, setUser] = useState(null);\n    const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n    useEffect(() => {\n        const storedToken = window.localStorage.getItem(\"token\"); // ✅ Use \"token\" instead of \"google_token\"\n        if (storedToken) {\n            const decodedUser = jwtDecode(storedToken);\n            setUser(decodedUser);\n            setUserId(decodedUser.user_id); // ✅ Set user_id on reload\n        }\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <Routes>\n                        <Route path=\"/\" element={<Login setUserId={setUserId} />} /> {/* ✅ Pass setUserId */}\n                        <Route path=\"/dashboard\" element={<Dashboard />} />\n                        <Route path=\"/superadmin\" element={<SuperAdminDashboard />} />\n                        <Route path=\"/add\" element={<Add />} />\n                        <Route path=\"/update/:id\" element={<Update />} />\n                        <Route path=\"/departments/:faculty_id\" element={<Departments />} />\n                        <Route path=\"/changepassword\" element={<ChangePassword user_id={userId} />} />\n                    </Routes>\n                </header>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAASA,aAAa,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAC/D,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,YAAY;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,mBAAmB,MAAM,6BAA6B;AAC7D,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,GAAG,MAAM,aAAa;AAC7B,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,cAAc,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,MAAM,EAAEC,SAAS,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1CC,SAAS,CAAC,MAAM;IACZ,MAAMkB,WAAW,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC1D,IAAIH,WAAW,EAAE;MACb,MAAMI,WAAW,GAAGrB,SAAS,CAACiB,WAAW,CAAC;MAC1CH,OAAO,CAACO,WAAW,CAAC;MACpBL,SAAS,CAACK,WAAW,CAACC,OAAO,CAAC,CAAC,CAAC;IACpC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA,CAACf,aAAa;IAAA4B,QAAA,eACVb,OAAA;MAAKc,SAAS,EAAC,KAAK;MAAAD,QAAA,eAChBb,OAAA;QAAQc,SAAS,EAAC,YAAY;QAAAD,QAAA,eAC1Bb,OAAA,CAACd,MAAM;UAAA2B,QAAA,gBACHb,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,GAAG;YAACC,OAAO,eAAEhB,OAAA,CAACH,KAAK;cAACS,SAAS,EAAEA;YAAU;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,KAAC,eAC7DpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,YAAY;YAACC,OAAO,eAAEhB,OAAA,CAACR,SAAS;cAAAyB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnDpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,aAAa;YAACC,OAAO,eAAEhB,OAAA,CAACP,mBAAmB;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9DpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,MAAM;YAACC,OAAO,eAAEhB,OAAA,CAACJ,GAAG;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACvCpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,aAAa;YAACC,OAAO,eAAEhB,OAAA,CAACL,MAAM;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjDpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,0BAA0B;YAACC,OAAO,eAAEhB,OAAA,CAACN,WAAW;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnEpB,OAAA,CAACb,KAAK;YAAC4B,IAAI,EAAC,iBAAiB;YAACC,OAAO,eAAEhB,OAAA,CAACF,cAAc;cAACc,OAAO,EAAEP;YAAO;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAExB;AAAClB,EAAA,CA9BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
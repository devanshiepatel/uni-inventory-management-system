{"ast":null,"code":"// import React, { useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import \"./Settings.css\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const Settings = () => {\n//     const navigate = useNavigate();\n//     const { user } = useContext(AuthContext); \n//     const [currentPassword, setCurrentPassword] = useState(\"\");\n//     const [newPassword, setNewPassword] = useState(\"\");  \n//         const { deptId, userRole, userId } = useContext(AuthContext);\n\n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     // üîπ Change Password Function\n//     const handleChangePassword = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const response = await axios.put(\"http://localhost:8800/api/users/change-password\", {\n//                 user_id: user.user_id,\n//                 currentPassword,\n//                 newPassword,\n//             }, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n\n//             alert(response.data.message);\n//             setCurrentPassword(\"\");\n//             setNewPassword(\"\");\n//         } catch (error) {\n//             console.error(\"‚ùå Error changing password:\", error);\n//             alert(\"Failed to change password.\");\n//         }\n//     };\n\n//     // üîπ Logout Function\n//     const handleLogout = () => {\n//         localStorage.removeItem(\"token\");\n//         localStorage.removeItem(\"userRole\");\n//         localStorage.removeItem(\"userName\");\n//         navigate(\"/\");\n//     };\n\n//     return (\n//         <div className=\"settings-container\">\n//              {/* Top Header */}\n//                                                             <div className=\"top-header\">\n//                                                                 <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\n//                                                                 <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                                             </div>\n\n//                                                             {/* Sidebar */}\n//                                                             <div className=\"sidebar\">\n//                                                                 <FaUserCircle size={50} className=\"user-icon\" />\n//                                                                 <p className=\"user-name\">{userName}</p>\n\n//                                                                 <div className=\"menu-options\">\n//                                                                     <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                                                     {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                                         <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                                                     )}\n//                                                                     {userRole === \"admin\" && (\n//                                                                         <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                                                     )}\n//                                                                     <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\n//                                                                 </div>\n//                                                             </div>\n\n//                                 <div className=\"main-content\">\n//             <h2>‚öôÔ∏è Settings</h2>\n\n//             {/* üîπ Change Password Form */}\n//             <form onSubmit={handleChangePassword}>\n//                 <h3>Change Password</h3>\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"Current Password\"\n//                     value={currentPassword}\n//                     onChange={(e) => setCurrentPassword(e.target.value)}\n//                     required\n//                 />\n//                 <input\n//                     type=\"password\"\n//                     placeholder=\"New Password\"\n//                     value={newPassword}\n//                     onChange={(e) => setNewPassword(e.target.value)}\n//                     required\n//                 />\n//                 <button type=\"submit\">üîí Change Password</button>\n//             </form>\n\n//             {/* üîπ Logout Button */}\n//             <button onClick={handleLogout} className=\"logout-button\">\n//                 üö™ Logout\n//             </button>\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default Settings;","map":{"version":3,"names":[],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/Settings.jsx"],"sourcesContent":["// import React, { useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import \"./Settings.css\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n\r\n\r\n// const Settings = () => {\r\n//     const navigate = useNavigate();\r\n//     const { user } = useContext(AuthContext); \r\n//     const [currentPassword, setCurrentPassword] = useState(\"\");\r\n//     const [newPassword, setNewPassword] = useState(\"\");  \r\n//         const { deptId, userRole, userId } = useContext(AuthContext);\r\n    \r\n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n\r\n//     // üîπ Change Password Function\r\n//     const handleChangePassword = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const response = await axios.put(\"http://localhost:8800/api/users/change-password\", {\r\n//                 user_id: user.user_id,\r\n//                 currentPassword,\r\n//                 newPassword,\r\n//             }, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n\r\n//             alert(response.data.message);\r\n//             setCurrentPassword(\"\");\r\n//             setNewPassword(\"\");\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error changing password:\", error);\r\n//             alert(\"Failed to change password.\");\r\n//         }\r\n//     };\r\n\r\n//     // üîπ Logout Function\r\n//     const handleLogout = () => {\r\n//         localStorage.removeItem(\"token\");\r\n//         localStorage.removeItem(\"userRole\");\r\n//         localStorage.removeItem(\"userName\");\r\n//         navigate(\"/\");\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"settings-container\">\r\n//              {/* Top Header */}\r\n//                                                             <div className=\"top-header\">\r\n//                                                                 <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n//                                                                 <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                                             </div>\r\n                                                \r\n//                                                             {/* Sidebar */}\r\n//                                                             <div className=\"sidebar\">\r\n//                                                                 <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                                                 <p className=\"user-name\">{userName}</p>\r\n                                                \r\n//                                                                 <div className=\"menu-options\">\r\n//                                                                     <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                                                     {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                                         <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                                                     )}\r\n//                                                                     {userRole === \"admin\" && (\r\n//                                                                         <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                                                     )}\r\n//                                                                     <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n//                                                                 </div>\r\n//                                                             </div>\r\n                        \r\n//                                 <div className=\"main-content\">\r\n//             <h2>‚öôÔ∏è Settings</h2>\r\n\r\n//             {/* üîπ Change Password Form */}\r\n//             <form onSubmit={handleChangePassword}>\r\n//                 <h3>Change Password</h3>\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"Current Password\"\r\n//                     value={currentPassword}\r\n//                     onChange={(e) => setCurrentPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <input\r\n//                     type=\"password\"\r\n//                     placeholder=\"New Password\"\r\n//                     value={newPassword}\r\n//                     onChange={(e) => setNewPassword(e.target.value)}\r\n//                     required\r\n//                 />\r\n//                 <button type=\"submit\">üîí Change Password</button>\r\n//             </form>\r\n\r\n//             {/* üîπ Logout Button */}\r\n//             <button onClick={handleLogout} className=\"logout-button\">\r\n//                 üö™ Logout\r\n//             </button>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Settings;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
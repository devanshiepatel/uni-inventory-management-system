{"ast":null,"code":"// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./ManageUsers.css\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const ManageUsers = () => {\n//     const [users, setUsers] = useState([]);\n//     const [selectedUser, setSelectedUser] = useState(null);\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [role, setRole] = useState(\"\");\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\n//     const [password, setPassword] = useState(\"\"); // New password field\n//     const { deptId, userRole, userId } = useContext(AuthContext);\n//       const navigate = useNavigate();  \n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             // üîπ Exclude the logged-in user from the list\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\n//             setUsers(filteredUsers);\n//         } catch (err) {\n//             console.error(\"‚ùå Error fetching users:\", err);\n//             alert(\"‚ùå Failed to fetch users.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Adding a New User\n//     const handleAddUser = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 alert(\"‚ùå Unauthorized: Please log in again.\");\n//                 return;\n//             }\n\n//             if (!deptId) {\n//                 alert(\"‚ùå Department information missing. Please re-login.\");\n//                 return;\n//             }\n\n//             const response = await axios.post(\n//                 \"http://localhost:8800/api/register\",\n//                 {\n//                     username,\n//                     email,\n//                     password,\n//                     role,\n//                     dept_id: deptId, \n//                     research_area: role === \"professor\" ? researchArea : undefined\n//                 },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"‚úÖ User added successfully!\");\n//             console.log(response.data);\n//             fetchUsers();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error adding user:\", error.response?.data || error);\n//             alert(error.response?.data?.message || \"‚ùå Failed to add user.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Updating a User\n//     const handleUpdateUser = async () => {\n//         if (!selectedUser) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n\n//             await axios.put(\n//                 `http://localhost:8800/api/update/${selectedUser}`,\n//                 { username, email, role },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"‚úÖ User updated successfully!\");\n//             fetchUsers();\n//             resetForm();\n//         } catch (err) {\n//             console.error(\"‚ùå Error updating user:\", err);\n//             alert(\"‚ùå Failed to update user.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Deleting a User\n//     const handleDeleteUser = async (user_id) => {\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             alert(\"‚úÖ User deleted successfully!\");\n//             fetchUsers();\n//         } catch (err) {\n//             console.error(\"‚ùå Error deleting user:\", err);\n//             alert(\"‚ùå Failed to delete user.\");\n//         }\n//     };\n\n//     // ‚úÖ Reset Form Fields\n//     const resetForm = () => {\n//         setUsername(\"\");\n//         setEmail(\"\");\n//         setRole(\"\");\n//         setResearchArea(\"\");\n//         setPassword(\"\");\n//         setSelectedUser(null);\n//     };\n\n//     return (\n//         <div className=\"manage-users-container\">\n\n//              {/* Top Header */}\n//                                                 <div className=\"top-header\">\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                                 </div>\n\n//                                                 {/* Sidebar */}\n//                                                 <div className=\"sidebar\">\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\n//                                                     <p className=\"user-name\">{userName}</p>\n\n//                                                     <div className=\"menu-options\">\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                                         )}\n//                                                         {userRole === \"admin\" && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                                         )}\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\n//                                                     </div>\n//                                                 </div>\n\n//                     <div className=\"main-content\">\n//             <h2>Manage Users</h2>\n\n//             {/* Add User Form */}\n//             <div className=\"user-form\">\n//                 <h3>Add New User</h3>\n//                 <form onSubmit={handleAddUser}>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"\">Select Role</option>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     {role === \"professor\" && (\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\n//                     )}\n//                     <button type=\"submit\">Add User</button>\n//                 </form>\n//             </div>\n\n//             {/* User List */}\n//             <h3>Users List</h3>\n//             <table className=\"users-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Username</th>\n//                         <th>Email</th>\n//                         <th>Role</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.user_id}>\n//                             <td>{user.user_name}</td>\n//                             <td>{user.user_email}</td>\n//                             <td>{user.role}</td>\n//                             <td>\n//                                 {/* üîπ Prevent editing or deleting self */}\n//                                 {user.user_id !== userId && (\n//                                     <>\n//                                         <button onClick={() => { \n//                                             setSelectedUser(user.user_id); \n//                                             setUsername(user.user_name); \n//                                             setEmail(user.user_email); \n//                                             setRole(user.role); \n//                                         }}>\n//                                             ‚úèÔ∏è Edit\n//                                         </button>\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>üóëÔ∏è Delete</button>\n//                                     </>\n//                                 )}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n\n//             {/* Update User Section */}\n//             {selectedUser && selectedUser !== userId && (\n//                 <div className=\"user-form\">\n//                     <h3>Update User</h3>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     <button onClick={handleUpdateUser}>Update User</button>\n//                 </div>\n//             )}\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default ManageUsers;","map":{"version":3,"names":[],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/ManageUsers.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ManageUsers.css\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n// const ManageUsers = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [selectedUser, setSelectedUser] = useState(null);\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [role, setRole] = useState(\"\");\r\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\r\n//     const [password, setPassword] = useState(\"\"); // New password field\r\n//     const { deptId, userRole, userId } = useContext(AuthContext);\r\n//       const navigate = useNavigate();  \r\n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers();\r\n//     }, []);\r\n    \r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             // üîπ Exclude the logged-in user from the list\r\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\r\n//             setUsers(filteredUsers);\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error fetching users:\", err);\r\n//             alert(\"‚ùå Failed to fetch users.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Adding a New User\r\n//     const handleAddUser = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             if (!token) {\r\n//                 alert(\"‚ùå Unauthorized: Please log in again.\");\r\n//                 return;\r\n//             }\r\n\r\n//             if (!deptId) {\r\n//                 alert(\"‚ùå Department information missing. Please re-login.\");\r\n//                 return;\r\n//             }\r\n\r\n//             const response = await axios.post(\r\n//                 \"http://localhost:8800/api/register\",\r\n//                 {\r\n//                     username,\r\n//                     email,\r\n//                     password,\r\n//                     role,\r\n//                     dept_id: deptId, \r\n//                     research_area: role === \"professor\" ? researchArea : undefined\r\n//                 },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"‚úÖ User added successfully!\");\r\n//             console.log(response.data);\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error adding user:\", error.response?.data || error);\r\n//             alert(error.response?.data?.message || \"‚ùå Failed to add user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Updating a User\r\n//     const handleUpdateUser = async () => {\r\n//         if (!selectedUser) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n\r\n//             await axios.put(\r\n//                 `http://localhost:8800/api/update/${selectedUser}`,\r\n//                 { username, email, role },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"‚úÖ User updated successfully!\");\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error updating user:\", err);\r\n//             alert(\"‚ùå Failed to update user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Deleting a User\r\n//     const handleDeleteUser = async (user_id) => {\r\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             alert(\"‚úÖ User deleted successfully!\");\r\n//             fetchUsers();\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error deleting user:\", err);\r\n//             alert(\"‚ùå Failed to delete user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Reset Form Fields\r\n//     const resetForm = () => {\r\n//         setUsername(\"\");\r\n//         setEmail(\"\");\r\n//         setRole(\"\");\r\n//         setResearchArea(\"\");\r\n//         setPassword(\"\");\r\n//         setSelectedUser(null);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"manage-users-container\">\r\n\r\n//              {/* Top Header */}\r\n//                                                 <div className=\"top-header\">\r\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                                 </div>\r\n                                    \r\n//                                                 {/* Sidebar */}\r\n//                                                 <div className=\"sidebar\">\r\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                                     <p className=\"user-name\">{userName}</p>\r\n                                    \r\n//                                                     <div className=\"menu-options\">\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                                         )}\r\n//                                                         {userRole === \"admin\" && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                                         )}\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n//                                                     </div>\r\n//                                                 </div>\r\n            \r\n//                     <div className=\"main-content\">\r\n//             <h2>Manage Users</h2>\r\n\r\n//             {/* Add User Form */}\r\n//             <div className=\"user-form\">\r\n//                 <h3>Add New User</h3>\r\n//                 <form onSubmit={handleAddUser}>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"\">Select Role</option>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     {role === \"professor\" && (\r\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\r\n//                     )}\r\n//                     <button type=\"submit\">Add User</button>\r\n//                 </form>\r\n//             </div>\r\n\r\n//             {/* User List */}\r\n//             <h3>Users List</h3>\r\n//             <table className=\"users-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Username</th>\r\n//                         <th>Email</th>\r\n//                         <th>Role</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.user_id}>\r\n//                             <td>{user.user_name}</td>\r\n//                             <td>{user.user_email}</td>\r\n//                             <td>{user.role}</td>\r\n//                             <td>\r\n//                                 {/* üîπ Prevent editing or deleting self */}\r\n//                                 {user.user_id !== userId && (\r\n//                                     <>\r\n//                                         <button onClick={() => { \r\n//                                             setSelectedUser(user.user_id); \r\n//                                             setUsername(user.user_name); \r\n//                                             setEmail(user.user_email); \r\n//                                             setRole(user.role); \r\n//                                         }}>\r\n//                                             ‚úèÔ∏è Edit\r\n//                                         </button>\r\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>üóëÔ∏è Delete</button>\r\n//                                     </>\r\n//                                 )}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n\r\n//             {/* Update User Section */}\r\n//             {selectedUser && selectedUser !== userId && (\r\n//                 <div className=\"user-form\">\r\n//                     <h3>Update User</h3>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     <button onClick={handleUpdateUser}>Update User</button>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ManageUsers;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./ManageInventory.css\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const ManageInventory = () => {\n//     const { deptId, userRole } = useContext(AuthContext); // Get deptId from AuthContext\n//     const [inventory, setInventory] = useState([]);\n//     const [selectedItem, setSelectedItem] = useState(null);\n//     const [itemName, setItemName] = useState(\"\");\n//     const [itemId, setId] = useState(\"\");\n//     const [status, setStatus] = useState(\"\");\n//     const [quantity, setQuantity] = useState(\"\");\n//     const [room_id, setRoomId] = useState(\"\");\n//     const [category, setCategory] = useState(\"\");\n//     const [lastMaintenance, setLastMaintenance] = useState(\"\");\n//     const navigate = useNavigate();  \n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     useEffect(() => {\n//         fetchInventory();\n//     }, []);\n\n//     const fetchInventory = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const response = await axios.get(`http://localhost:8800/api/inventory`, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setInventory(response.data);\n//         } catch (error) {\n//             console.error(\"‚ùå Error fetching inventory:\", error);\n//         }\n//     };\n\n//     const handleAddItem = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.post(\n//                 \"http://localhost:8800/api/inventory\",\n//                 {\n//                     item_id: itemId,\n//                     i_name: itemName,\n//                     category,\n//                     quantity,\n//                     room_id,\n//                     status,\n//                     last_maintenance_date: lastMaintenance,\n//                 },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             alert(\"‚úÖ Inventory item added successfully!\");\n//             fetchInventory();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error adding item:\", error);\n//         }\n//     };\n\n//     const handleUpdateItem = async () => {\n//         if (!selectedItem) return;\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.put(\n//                 `http://localhost:8800/api/inventory/${selectedItem}`,\n//                 {item_id: itemId, i_name: itemName, category, quantity, room_id, status, last_maintenance_date: lastMaintenance },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             alert(\"‚úÖ Inventory item updated successfully!\");\n//             fetchInventory();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error updating item:\", error);\n//         }\n//     };\n\n//     const handleDeleteItem = async (itemId) => {\n//         if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.delete(`http://localhost:8800/api/inventory/${itemId}`, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             alert(\"‚úÖ Inventory item deleted successfully!\");\n//             fetchInventory();\n//         } catch (error) {\n//             console.error(\"‚ùå Error deleting item:\", error);\n//         }\n//     };\n\n//     const resetForm = () => {\n//         setItemName(\"\");\n//         setCategory(\"\");        \n//         setQuantity(\"\");\n//         setRoomId(\"\");\n//         setStatus(\"\");\n//         setLastMaintenance(\"\");\n//         setSelectedItem(null);\n//     };\n\n//     return (\n//         <div className=\"manage-inventory-container\">\n//             {/* Top Header */}\n//                                     <div className=\"top-header\">\n//                                         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\n//                                         <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                     </div>\n\n//                                     {/* Sidebar */}\n//                                     <div className=\"sidebar\">\n//                                         <FaUserCircle size={50} className=\"user-icon\" />\n//                                         <p className=\"user-name\">{userName}</p>\n\n//                                         <div className=\"menu-options\">\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                             {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                             )}\n//                                             {userRole === \"admin\" && (\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                             )}\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\n//                                         </div>\n//                                     </div>\n\n//         <div>\n//             <h2>Manage Inventory</h2>\n\n//             {userRole === \"admin\" && (\n//                 <div className=\"inventory-form\">\n//                     <h3>{selectedItem ? \"Update Item\" : \"Add New Item\"}</h3>\n//                     <form onSubmit={selectedItem ? handleUpdateItem : handleAddItem}>\n//                         <input type=\"text\" placeholder=\"Item Id\" value={itemId} onChange={(e) => setId(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Item Name\" value={itemName} onChange={(e) => setItemName(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Category\" value={category} onChange={(e) => setCategory(e.target.value)} required />\n//                         <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"RoomId\" value={room_id} onChange={(e) => setRoomId(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Condition\" value={status} onChange={(e) => setStatus(e.target.value)} required />\n//                         <input type=\"date\" placeholder=\"Last Maintenance Date\" value={lastMaintenance} onChange={(e) => setLastMaintenance(e.target.value)} />\n//                         <button type=\"submit\">{selectedItem ? \"Update Item\" : \"Add Item\"}</button>\n//                     </form>\n//                 </div>\n//             )}\n\n//             <h3>Inventory List</h3>\n//             <table className=\"inventory-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Item Name</th>\n//                         <th>Category</th>\n//                         <th>Quantity</th>\n//                         <th>Location</th>\n//                         <th>Status</th>\n//                         <th>Last Maintenance</th>\n//                         {userRole === \"admin\" && <th>Actions</th>}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {inventory.map((item) => (\n//                         <tr key={item.item_id}>\n//                             <td>{item.i_name}</td>\n//                             <td>{item.category}</td>\n//                             <td>{item.quantity}</td>\n//                             <td>{item.room_id}</td>\n//                             <td>{item.status}</td>\n//                             <td>{item.last_maintenance_date}</td>\n//                             {userRole === \"admin\" && (\n//                                 <td>\n//                                     <button onClick={() => { \n//                                         setSelectedItem(item.item_id); \n//                                         setItemName(item.i_name);\n//                                         setStatus\n//                             (item.category);\n//                                  setQuantity(item.quantity);\n//                                         setRoomId(item.room_id);\n//                                         setStatus(item.status);\n//                                         setLastMaintenance(item.last_maintenance_date);\n//                                     }}>‚úèÔ∏è Edit</button>\n//                                     <button onClick={() => handleDeleteItem(item.item_id)}>üóëÔ∏è Delete</button>\n//                                 </td>\n//                             )}\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default ManageInventory;","map":{"version":3,"names":[],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/ManageInventory.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ManageInventory.css\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n// const ManageInventory = () => {\r\n//     const { deptId, userRole } = useContext(AuthContext); // Get deptId from AuthContext\r\n//     const [inventory, setInventory] = useState([]);\r\n//     const [selectedItem, setSelectedItem] = useState(null);\r\n//     const [itemName, setItemName] = useState(\"\");\r\n//     const [itemId, setId] = useState(\"\");\r\n//     const [status, setStatus] = useState(\"\");\r\n//     const [quantity, setQuantity] = useState(\"\");\r\n//     const [room_id, setRoomId] = useState(\"\");\r\n//     const [category, setCategory] = useState(\"\");\r\n//     const [lastMaintenance, setLastMaintenance] = useState(\"\");\r\n//     const navigate = useNavigate();  \r\n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n    \r\n\r\n//     useEffect(() => {\r\n//         fetchInventory();\r\n//     }, []);\r\n\r\n//     const fetchInventory = async () => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const response = await axios.get(`http://localhost:8800/api/inventory`, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setInventory(response.data);\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error fetching inventory:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleAddItem = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.post(\r\n//                 \"http://localhost:8800/api/inventory\",\r\n//                 {\r\n//                     item_id: itemId,\r\n//                     i_name: itemName,\r\n//                     category,\r\n//                     quantity,\r\n//                     room_id,\r\n//                     status,\r\n//                     last_maintenance_date: lastMaintenance,\r\n//                 },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n//             alert(\"‚úÖ Inventory item added successfully!\");\r\n//             fetchInventory();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error adding item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleUpdateItem = async () => {\r\n//         if (!selectedItem) return;\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.put(\r\n//                 `http://localhost:8800/api/inventory/${selectedItem}`,\r\n//                 {item_id: itemId, i_name: itemName, category, quantity, room_id, status, last_maintenance_date: lastMaintenance },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n//             alert(\"‚úÖ Inventory item updated successfully!\");\r\n//             fetchInventory();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error updating item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleDeleteItem = async (itemId) => {\r\n//         if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.delete(`http://localhost:8800/api/inventory/${itemId}`, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             alert(\"‚úÖ Inventory item deleted successfully!\");\r\n//             fetchInventory();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error deleting item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const resetForm = () => {\r\n//         setItemName(\"\");\r\n//         setCategory(\"\");        \r\n//         setQuantity(\"\");\r\n//         setRoomId(\"\");\r\n//         setStatus(\"\");\r\n//         setLastMaintenance(\"\");\r\n//         setSelectedItem(null);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"manage-inventory-container\">\r\n//             {/* Top Header */}\r\n//                                     <div className=\"top-header\">\r\n//                                         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n//                                         <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                     </div>\r\n                        \r\n//                                     {/* Sidebar */}\r\n//                                     <div className=\"sidebar\">\r\n//                                         <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                         <p className=\"user-name\">{userName}</p>\r\n                        \r\n//                                         <div className=\"menu-options\">\r\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                             {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                             )}\r\n//                                             {userRole === \"admin\" && (\r\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                             )}\r\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n//                                         </div>\r\n//                                     </div>\r\n\r\n//         <div>\r\n//             <h2>Manage Inventory</h2>\r\n\r\n//             {userRole === \"admin\" && (\r\n//                 <div className=\"inventory-form\">\r\n//                     <h3>{selectedItem ? \"Update Item\" : \"Add New Item\"}</h3>\r\n//                     <form onSubmit={selectedItem ? handleUpdateItem : handleAddItem}>\r\n//                         <input type=\"text\" placeholder=\"Item Id\" value={itemId} onChange={(e) => setId(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Item Name\" value={itemName} onChange={(e) => setItemName(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Category\" value={category} onChange={(e) => setCategory(e.target.value)} required />\r\n//                         <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"RoomId\" value={room_id} onChange={(e) => setRoomId(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Condition\" value={status} onChange={(e) => setStatus(e.target.value)} required />\r\n//                         <input type=\"date\" placeholder=\"Last Maintenance Date\" value={lastMaintenance} onChange={(e) => setLastMaintenance(e.target.value)} />\r\n//                         <button type=\"submit\">{selectedItem ? \"Update Item\" : \"Add Item\"}</button>\r\n//                     </form>\r\n//                 </div>\r\n//             )}\r\n\r\n//             <h3>Inventory List</h3>\r\n//             <table className=\"inventory-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Item Name</th>\r\n//                         <th>Category</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Location</th>\r\n//                         <th>Status</th>\r\n//                         <th>Last Maintenance</th>\r\n//                         {userRole === \"admin\" && <th>Actions</th>}\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {inventory.map((item) => (\r\n//                         <tr key={item.item_id}>\r\n//                             <td>{item.i_name}</td>\r\n//                             <td>{item.category}</td>\r\n//                             <td>{item.quantity}</td>\r\n//                             <td>{item.room_id}</td>\r\n//                             <td>{item.status}</td>\r\n//                             <td>{item.last_maintenance_date}</td>\r\n//                             {userRole === \"admin\" && (\r\n//                                 <td>\r\n//                                     <button onClick={() => { \r\n//                                         setSelectedItem(item.item_id); \r\n//                                         setItemName(item.i_name);\r\n//                                         setStatus\r\n//                             (item.category);\r\n//                                  setQuantity(item.quantity);\r\n//                                         setRoomId(item.room_id);\r\n//                                         setStatus(item.status);\r\n//                                         setLastMaintenance(item.last_maintenance_date);\r\n//                                     }}>‚úèÔ∏è Edit</button>\r\n//                                     <button onClick={() => handleDeleteItem(item.item_id)}>üóëÔ∏è Delete</button>\r\n//                                 </td>\r\n//                             )}\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ManageInventory;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
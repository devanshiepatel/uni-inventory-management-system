{"ast":null,"code":"// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import { jwtDecode } from \"jwt-decode\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import axios from \"axios\";\n\n// import Dashboard from \"./pages/Dashboard\";\n// import SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\n// import Departments from \"./pages/Departments\";\n// import Update from \"./pages/Update\";\n// import Add from \"./pages/Add\";\n// import Login from \"./pages/Login\";\n// import ChangePassword from \"./pages/ChangePassword\";\n\n// const clientId = process.env.REACT_APP_CLIENT_ID;\n\n// function App() {\n//     const [user, setUser] = useState(null);\n//     const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n//     useEffect(() => {\n//         const storedToken = window.localStorage.getItem(\"google_token\");\n//         if (storedToken) {\n//             const decodedUser = jwtDecode(storedToken);\n//             setUser(decodedUser);\n//         }\n//     }, []);\n\n//     const responseGoogle = (res) => {\n//         if (res?.credential) {\n//             const decodedUser = jwtDecode(res.credential);\n//             setUser(decodedUser);\n//             window.localStorage.setItem(\"google_token\", res.credential);\n//         } else {\n//             setUser(null);\n//             window.localStorage.removeItem(\"google_token\");\n//         }\n//     };\n\n//     return (\n//         <GoogleOAuthProvider clientId={clientId}>\n//             <BrowserRouter>\n//                 <div className=\"App\">\n//                     <header className=\"App-header\">\n//                         <Routes>\n//                             <Route path=\"/\" element={<Login responseGoogle={responseGoogle} />} />\n//                             <Route path=\"/dashboard\" element={<Dashboard />} />\n//                             <Route path=\"/superadmin\" element={<SuperAdminDashboard />} />\n//                             <Route path=\"/add\" element={<Add />} />\n//                             <Route path=\"/update/:id\" element={<Update />} />\n//                             <Route path=\"/departments/:faculty_id\" element={<Departments />} />\n//                             <Route path=\"/changepassword\" element={<ChangePassword user_id={userId} />} />\n//                         </Routes>\n//                     </header>\n//                 </div>\n//             </BrowserRouter>\n//         </GoogleOAuthProvider>\n//     );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/App.js"],"sourcesContent":["// import { BrowserRouter, Routes, Route } from \"react-router-dom\";\n// import \"./App.css\";\n// import { useState, useEffect } from \"react\";\n// import { jwtDecode } from \"jwt-decode\";\n// import { GoogleOAuthProvider } from \"@react-oauth/google\";\n// import axios from \"axios\";\n\n// import Dashboard from \"./pages/Dashboard\";\n// import SuperAdminDashboard from \"./pages/SuperAdminDashboard\";\n// import Departments from \"./pages/Departments\";\n// import Update from \"./pages/Update\";\n// import Add from \"./pages/Add\";\n// import Login from \"./pages/Login\";\n// import ChangePassword from \"./pages/ChangePassword\";\n\n// const clientId = process.env.REACT_APP_CLIENT_ID;\n\n// function App() {\n//     const [user, setUser] = useState(null);\n//     const [userId, setUserId] = useState(\"\"); // ✅ Store user_id for password change\n\n//     useEffect(() => {\n//         const storedToken = window.localStorage.getItem(\"google_token\");\n//         if (storedToken) {\n//             const decodedUser = jwtDecode(storedToken);\n//             setUser(decodedUser);\n//         }\n//     }, []);\n\n//     const responseGoogle = (res) => {\n//         if (res?.credential) {\n//             const decodedUser = jwtDecode(res.credential);\n//             setUser(decodedUser);\n//             window.localStorage.setItem(\"google_token\", res.credential);\n//         } else {\n//             setUser(null);\n//             window.localStorage.removeItem(\"google_token\");\n//         }\n//     };\n\n//     return (\n//         <GoogleOAuthProvider clientId={clientId}>\n//             <BrowserRouter>\n//                 <div className=\"App\">\n//                     <header className=\"App-header\">\n//                         <Routes>\n//                             <Route path=\"/\" element={<Login responseGoogle={responseGoogle} />} />\n//                             <Route path=\"/dashboard\" element={<Dashboard />} />\n//                             <Route path=\"/superadmin\" element={<SuperAdminDashboard />} />\n//                             <Route path=\"/add\" element={<Add />} />\n//                             <Route path=\"/update/:id\" element={<Update />} />\n//                             <Route path=\"/departments/:faculty_id\" element={<Departments />} />\n//                             <Route path=\"/changepassword\" element={<ChangePassword user_id={userId} />} />\n//                         </Routes>\n//                     </header>\n//                 </div>\n//             </BrowserRouter>\n//         </GoogleOAuthProvider>\n//     );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
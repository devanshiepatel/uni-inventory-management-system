{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\pages\\\\Rooms.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import './Rooms.css';\n\n// const Rooms = ({ departmentId }) => {\n//     const [rooms, setRooms] = useState([]);\n//     const [loading, setLoading] = useState(true);\n\n//     useEffect(() => {\n//         if (departmentId) {\n//             console.log(\"Fetching rooms for department:\", departmentId); // Debugging\n//             axios.get(`http://localhost:8800/rooms/${departmentId}`)\n//                 .then(response => {\n//                     console.log(\"Rooms fetched:\", response.data); // Debugging\n//                     setRooms(response.data);\n//                 })\n//                 .catch(error => {\n//                     console.error(\"Error fetching rooms:\", error);\n//                     setRooms([]);\n//                 })\n//                 .finally(() => setLoading(false));\n//         }\n//     }, [departmentId]);\n\n//     console.log(\"Rooms state:\", rooms); // Debugging\n\n//     // Count rooms based on type\n//     const classroomCount = rooms.filter(room => room.room_type === 'classroom').length;\n//     const labCount = rooms.filter(room => room.room_type === 'lab').length;\n//     const utilityCount = rooms.filter(room => room.room_type === 'utility').length;\n\n//     console.log(`Classroom Count: ${classroomCount}, Lab Count: ${labCount}, Utility Count: ${utilityCount}`);\n\n//     return (\n//         <div className=\"rooms-container\">\n//             <h3>Room Details</h3>\n\n//             {loading ? (\n//                 <p>Loading rooms...</p>\n//             ) : (\n//                 <div className=\"room-list\">\n//                     {/* Classroom Card */}\n//                     <div className=\"room-card\">\n//                         <h4>üìö Classrooms</h4>\n//                         <p>{classroomCount > 0 ? `Total: ${classroomCount}` : \"No information available\"}</p>\n//                     </div>\n\n//                     {/* Lab Card */}\n//                     <div className=\"room-card\">\n//                         <h4>üî¨ Labs</h4>\n//                         <p>{labCount > 0 ? `Total: ${labCount}` : \"No information available\"}</p>\n//                     </div>\n\n//                     {/* Utility Room Card */}\n//                     <div className=\"room-card\">\n//                         <h4>üõ†Ô∏è Utility Rooms</h4>\n//                         <p>{utilityCount > 0 ? `Total: ${utilityCount}` : \"No information available\"}</p>\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Rooms;\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Rooms.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rooms = () => {\n  _s();\n  const {\n    category\n  } = useParams(); // Get selected room type from URL\n  const [rooms, setRooms] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchRooms = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        const response = await axios.get(`http://localhost:8800/api/rooms/${category}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setRooms(response.data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching rooms:\", error);\n      }\n    };\n    fetchRooms();\n  }, [category]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rooms-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [category.charAt(0).toUpperCase() + category.slice(1), \" List\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"rooms-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Room ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Capacity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: room.room_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: room.room_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: room.capacity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => navigate(`/inventory/${room.room_id}`),\n              children: \"View Inventory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, room.room_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Rooms, \"TJgKpbpFuES+1CoIvDb3eQyE4h4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Rooms;\nexport default Rooms;\nvar _c;\n$RefreshReg$(_c, \"Rooms\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Rooms","_s","category","rooms","setRooms","navigate","fetchRooms","token","localStorage","getItem","response","get","headers","Authorization","data","error","console","className","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","map","room","room_name","room_id","capacity","onClick","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/Rooms.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import axios from 'axios';\r\n// import './Rooms.css';\r\n\r\n// const Rooms = ({ departmentId }) => {\r\n//     const [rooms, setRooms] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n\r\n//     useEffect(() => {\r\n//         if (departmentId) {\r\n//             console.log(\"Fetching rooms for department:\", departmentId); // Debugging\r\n//             axios.get(`http://localhost:8800/rooms/${departmentId}`)\r\n//                 .then(response => {\r\n//                     console.log(\"Rooms fetched:\", response.data); // Debugging\r\n//                     setRooms(response.data);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     console.error(\"Error fetching rooms:\", error);\r\n//                     setRooms([]);\r\n//                 })\r\n//                 .finally(() => setLoading(false));\r\n//         }\r\n//     }, [departmentId]);\r\n\r\n//     console.log(\"Rooms state:\", rooms); // Debugging\r\n\r\n//     // Count rooms based on type\r\n//     const classroomCount = rooms.filter(room => room.room_type === 'classroom').length;\r\n//     const labCount = rooms.filter(room => room.room_type === 'lab').length;\r\n//     const utilityCount = rooms.filter(room => room.room_type === 'utility').length;\r\n\r\n//     console.log(`Classroom Count: ${classroomCount}, Lab Count: ${labCount}, Utility Count: ${utilityCount}`);\r\n\r\n//     return (\r\n//         <div className=\"rooms-container\">\r\n//             <h3>Room Details</h3>\r\n\r\n//             {loading ? (\r\n//                 <p>Loading rooms...</p>\r\n//             ) : (\r\n//                 <div className=\"room-list\">\r\n//                     {/* Classroom Card */}\r\n//                     <div className=\"room-card\">\r\n//                         <h4>üìö Classrooms</h4>\r\n//                         <p>{classroomCount > 0 ? `Total: ${classroomCount}` : \"No information available\"}</p>\r\n//                     </div>\r\n\r\n//                     {/* Lab Card */}\r\n//                     <div className=\"room-card\">\r\n//                         <h4>üî¨ Labs</h4>\r\n//                         <p>{labCount > 0 ? `Total: ${labCount}` : \"No information available\"}</p>\r\n//                     </div>\r\n\r\n//                     {/* Utility Room Card */}\r\n//                     <div className=\"room-card\">\r\n//                         <h4>üõ†Ô∏è Utility Rooms</h4>\r\n//                         <p>{utilityCount > 0 ? `Total: ${utilityCount}` : \"No information available\"}</p>\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Rooms;\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./Rooms.css\";\r\n\r\nconst Rooms = () => {\r\n    const { category } = useParams();  // Get selected room type from URL\r\n    const [rooms, setRooms] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchRooms = async () => {\r\n            try {\r\n                const token = localStorage.getItem(\"token\");\r\n                const response = await axios.get(`http://localhost:8800/api/rooms/${category}`, {\r\n                    headers: { Authorization: `Bearer ${token}` },\r\n                });\r\n                setRooms(response.data);\r\n            } catch (error) {\r\n                console.error(\"‚ùå Error fetching rooms:\", error);\r\n            }\r\n        };\r\n        fetchRooms();\r\n    }, [category]);\r\n\r\n    return (\r\n        <div className=\"rooms-container\">\r\n            <h2>{category.charAt(0).toUpperCase() + category.slice(1)} List</h2>\r\n\r\n            <table className=\"rooms-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Room Name</th>\r\n                        <th>Room ID</th>\r\n                        <th>Capacity</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rooms.map((room) => (\r\n                        <tr key={room.room_id}>\r\n                            <td>{room.room_name}</td>\r\n                            <td>{room.room_id}</td>\r\n                            <td>{room.capacity}</td>\r\n                            <td>\r\n                                <button onClick={() => navigate(`/inventory/${room.room_id}`)}>View Inventory</button>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Rooms;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC,CAAC,CAAE;EACnC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACZ,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,mCAAmCT,QAAQ,EAAE,EAAE;UAC5EU,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,KAAK;UAAG;QAChD,CAAC,CAAC;QACFH,QAAQ,CAACM,QAAQ,CAACI,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IACDT,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACIH,OAAA;IAAKkB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC5BnB,OAAA;MAAAmB,QAAA,GAAKhB,QAAQ,CAACiB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAAC,CAAC,CAAC,EAAC,OAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEpE1B,OAAA;MAAOkB,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BnB,OAAA;QAAAmB,QAAA,eACInB,OAAA;UAAAmB,QAAA,gBACInB,OAAA;YAAAmB,QAAA,EAAI;UAAS;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClB1B,OAAA;YAAAmB,QAAA,EAAI;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChB1B,OAAA;YAAAmB,QAAA,EAAI;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB1B,OAAA;YAAAmB,QAAA,EAAI;UAAO;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACR1B,OAAA;QAAAmB,QAAA,EACKf,KAAK,CAACuB,GAAG,CAAEC,IAAI,iBACZ5B,OAAA;UAAAmB,QAAA,gBACInB,OAAA;YAAAmB,QAAA,EAAKS,IAAI,CAACC;UAAS;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzB1B,OAAA;YAAAmB,QAAA,EAAKS,IAAI,CAACE;UAAO;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvB1B,OAAA;YAAAmB,QAAA,EAAKS,IAAI,CAACG;UAAQ;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB1B,OAAA;YAAAmB,QAAA,eACInB,OAAA;cAAQgC,OAAO,EAAEA,CAAA,KAAM1B,QAAQ,CAAC,cAAcsB,IAAI,CAACE,OAAO,EAAE,CAAE;cAAAX,QAAA,EAAC;YAAc;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA,GANAE,IAAI,CAACE,OAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOjB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEd,CAAC;AAACxB,EAAA,CAhDID,KAAK;EAAA,QACcL,SAAS,EAEbC,WAAW;AAAA;AAAAoC,EAAA,GAH1BhC,KAAK;AAkDX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
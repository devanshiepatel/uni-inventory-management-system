{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\pages\\\\ManageUsers.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./ManageUsers.css\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const ManageUsers = () => {\n//     const [users, setUsers] = useState([]);\n//     const [selectedUser, setSelectedUser] = useState(null);\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [role, setRole] = useState(\"\");\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\n//     const [password, setPassword] = useState(\"\"); // New password field\n//     const { deptId, userRole, userId } = useContext(AuthContext);\n//       const navigate = useNavigate();  \n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             // üîπ Exclude the logged-in user from the list\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\n//             setUsers(filteredUsers);\n//         } catch (err) {\n//             console.error(\"‚ùå Error fetching users:\", err);\n//             alert(\"‚ùå Failed to fetch users.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Adding a New User\n//     const handleAddUser = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 alert(\"‚ùå Unauthorized: Please log in again.\");\n//                 return;\n//             }\n\n//             if (!deptId) {\n//                 alert(\"‚ùå Department information missing. Please re-login.\");\n//                 return;\n//             }\n\n//             const response = await axios.post(\n//                 \"http://localhost:8800/api/register\",\n//                 {\n//                     username,\n//                     email,\n//                     password,\n//                     role,\n//                     dept_id: deptId, \n//                     research_area: role === \"professor\" ? researchArea : undefined\n//                 },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"‚úÖ User added successfully!\");\n//             console.log(response.data);\n//             fetchUsers();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error adding user:\", error.response?.data || error);\n//             alert(error.response?.data?.message || \"‚ùå Failed to add user.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Updating a User\n//     const handleUpdateUser = async () => {\n//         if (!selectedUser) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n\n//             await axios.put(\n//                 `http://localhost:8800/api/update/${selectedUser}`,\n//                 { username, email, role },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"‚úÖ User updated successfully!\");\n//             fetchUsers();\n//             resetForm();\n//         } catch (err) {\n//             console.error(\"‚ùå Error updating user:\", err);\n//             alert(\"‚ùå Failed to update user.\");\n//         }\n//     };\n\n//     // ‚úÖ Handle Deleting a User\n//     const handleDeleteUser = async (user_id) => {\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             alert(\"‚úÖ User deleted successfully!\");\n//             fetchUsers();\n//         } catch (err) {\n//             console.error(\"‚ùå Error deleting user:\", err);\n//             alert(\"‚ùå Failed to delete user.\");\n//         }\n//     };\n\n//     // ‚úÖ Reset Form Fields\n//     const resetForm = () => {\n//         setUsername(\"\");\n//         setEmail(\"\");\n//         setRole(\"\");\n//         setResearchArea(\"\");\n//         setPassword(\"\");\n//         setSelectedUser(null);\n//     };\n\n//     return (\n//         <div className=\"manage-users-container\">\n\n//              {/* Top Header */}\n//                                                 <div className=\"top-header\">\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                                 </div>\n\n//                                                 {/* Sidebar */}\n//                                                 <div className=\"sidebar\">\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\n//                                                     <p className=\"user-name\">{userName}</p>\n\n//                                                     <div className=\"menu-options\">\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                                         )}\n//                                                         {userRole === \"admin\" && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                                         )}\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\n//                                                     </div>\n//                                                 </div>\n\n//                     <div className=\"main-content\">\n//             <h2>Manage Users</h2>\n\n//             {/* Add User Form */}\n//             <div className=\"user-form\">\n//                 <h3>Add New User</h3>\n//                 <form onSubmit={handleAddUser}>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"\">Select Role</option>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     {role === \"professor\" && (\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\n//                     )}\n//                     <button type=\"submit\">Add User</button>\n//                 </form>\n//             </div>\n\n//             {/* User List */}\n//             <h3>Users List</h3>\n//             <table className=\"users-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Username</th>\n//                         <th>Email</th>\n//                         <th>Role</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.user_id}>\n//                             <td>{user.user_name}</td>\n//                             <td>{user.user_email}</td>\n//                             <td>{user.role}</td>\n//                             <td>\n//                                 {/* üîπ Prevent editing or deleting self */}\n//                                 {user.user_id !== userId && (\n//                                     <>\n//                                         <button onClick={() => { \n//                                             setSelectedUser(user.user_id); \n//                                             setUsername(user.user_name); \n//                                             setEmail(user.user_email); \n//                                             setRole(user.role); \n//                                         }}>\n//                                             ‚úèÔ∏è Edit\n//                                         </button>\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>üóëÔ∏è Delete</button>\n//                                     </>\n//                                 )}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n\n//             {/* Update User Section */}\n//             {selectedUser && selectedUser !== userId && (\n//                 <div className=\"user-form\">\n//                     <h3>Update User</h3>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     <button onClick={handleUpdateUser}>Update User</button>\n//                 </div>\n//             )}\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default ManageUsers;\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport \"./ManageUsers.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [researchArea, setResearchArea] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    deptId,\n    userRole,\n    userId\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  useEffect(() => {\n    setUserName(localStorage.getItem(\"userName\") || \"\");\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await axios.get(\"http://localhost:8800/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUsers(res.data.filter(user => user.user_id !== userId));\n    } catch (err) {\n      console.error(\"‚ùå Error fetching users:\", err);\n      alert(\"‚ùå Failed to fetch users.\");\n    }\n  };\n  const handleAddUser = async e => {\n    e.preventDefault();\n    if (!username || !email || !role) {\n      alert(\"‚ùå All fields except Research Area are required.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"‚ùå Unauthorized: Please log in again.\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:8800/api/register\", {\n        username,\n        email,\n        password: password || \"default123\",\n        role,\n        dept_id: deptId,\n        research_area: role === \"professor\" ? researchArea : undefined\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"‚úÖ User added successfully!\");\n      fetchUsers();\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"‚ùå Error adding user:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"‚ùå Failed to add user.\");\n    }\n  };\n  const handleUpdateUser = async () => {\n    if (!selectedUser) return;\n    if (!username || !email || !role) {\n      alert(\"‚ùå All fields except Research Area are required.\");\n      return;\n    }\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:8800/api/update/${selectedUser}`, {\n        username,\n        email,\n        role\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"‚úÖ User updated successfully!\");\n      fetchUsers();\n      resetForm();\n    } catch (err) {\n      console.error(\"‚ùå Error updating user:\", err);\n      alert(\"‚ùå Failed to update user.\");\n    }\n  };\n  const handleDeleteUser = async user_id => {\n    if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"‚úÖ User deleted successfully!\");\n      fetchUsers();\n    } catch (err) {\n      console.error(\"‚ùå Error deleting user:\", err);\n      alert(\"‚ùå Failed to delete user.\");\n    }\n  };\n  const resetForm = () => {\n    setUsername(\"\");\n    setEmail(\"\");\n    setRole(\"\");\n    setResearchArea(\"\");\n    setPassword(\"\");\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-users-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"university-name\",\n        children: \"Dharmshinh Desai University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n        size: 50,\n        className: \"user-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-name\",\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/dashboard\"),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }, this), (userRole === \"hod\" || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/manage-users\"),\n          children: \"Manage Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 25\n        }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/manage-inventory\"),\n          children: \"Manage Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/settings\"),\n          children: \"\\u2699\\uFE0F Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedUser ? \"Edit User\" : \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: selectedUser ? handleUpdateUser : handleAddUser,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: !selectedUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: role,\n            onChange: e => setRole(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"professor\",\n              children: \"Professor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 25\n          }, this), role === \"professor\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Research Area (Optional)\",\n            value: researchArea,\n            onChange: e => setResearchArea(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: selectedUser ? \"Update User\" : \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 25\n          }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: resetForm,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"users-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.user_id !== userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setSelectedUser(user.user_id);\n                    setUsername(user.username);\n                    setEmail(user.email);\n                    setRole(user.role);\n                  },\n                  children: \"\\u270F\\uFE0F Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteUser(user.user_id),\n                  children: \"\\uD83D\\uDDD1 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 33\n            }, this)]\n          }, user.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageUsers, \"itoJ1qShD1hY+DgjpqmBlxC1VWE=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageUsers;\nexport default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","useNavigate","FaUserCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageUsers","_s","users","setUsers","selectedUser","setSelectedUser","username","setUsername","email","setEmail","role","setRole","researchArea","setResearchArea","password","setPassword","deptId","userRole","userId","navigate","userName","setUserName","localStorage","getItem","fetchUsers","token","res","get","headers","Authorization","data","filter","user","user_id","err","console","error","alert","handleAddUser","e","preventDefault","response","post","dept_id","research_area","undefined","resetForm","_error$response","_error$response2","_error$response2$data","message","handleUpdateUser","put","handleDeleteUser","window","confirm","delete","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","type","placeholder","value","onChange","target","required","map","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/ManageUsers.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ManageUsers.css\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n// const ManageUsers = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [selectedUser, setSelectedUser] = useState(null);\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [role, setRole] = useState(\"\");\r\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\r\n//     const [password, setPassword] = useState(\"\"); // New password field\r\n//     const { deptId, userRole, userId } = useContext(AuthContext);\r\n//       const navigate = useNavigate();  \r\n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers();\r\n//     }, []);\r\n    \r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             // üîπ Exclude the logged-in user from the list\r\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\r\n//             setUsers(filteredUsers);\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error fetching users:\", err);\r\n//             alert(\"‚ùå Failed to fetch users.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Adding a New User\r\n//     const handleAddUser = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             if (!token) {\r\n//                 alert(\"‚ùå Unauthorized: Please log in again.\");\r\n//                 return;\r\n//             }\r\n\r\n//             if (!deptId) {\r\n//                 alert(\"‚ùå Department information missing. Please re-login.\");\r\n//                 return;\r\n//             }\r\n\r\n//             const response = await axios.post(\r\n//                 \"http://localhost:8800/api/register\",\r\n//                 {\r\n//                     username,\r\n//                     email,\r\n//                     password,\r\n//                     role,\r\n//                     dept_id: deptId, \r\n//                     research_area: role === \"professor\" ? researchArea : undefined\r\n//                 },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"‚úÖ User added successfully!\");\r\n//             console.log(response.data);\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error adding user:\", error.response?.data || error);\r\n//             alert(error.response?.data?.message || \"‚ùå Failed to add user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Updating a User\r\n//     const handleUpdateUser = async () => {\r\n//         if (!selectedUser) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n\r\n//             await axios.put(\r\n//                 `http://localhost:8800/api/update/${selectedUser}`,\r\n//                 { username, email, role },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"‚úÖ User updated successfully!\");\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error updating user:\", err);\r\n//             alert(\"‚ùå Failed to update user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Handle Deleting a User\r\n//     const handleDeleteUser = async (user_id) => {\r\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             alert(\"‚úÖ User deleted successfully!\");\r\n//             fetchUsers();\r\n//         } catch (err) {\r\n//             console.error(\"‚ùå Error deleting user:\", err);\r\n//             alert(\"‚ùå Failed to delete user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ‚úÖ Reset Form Fields\r\n//     const resetForm = () => {\r\n//         setUsername(\"\");\r\n//         setEmail(\"\");\r\n//         setRole(\"\");\r\n//         setResearchArea(\"\");\r\n//         setPassword(\"\");\r\n//         setSelectedUser(null);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"manage-users-container\">\r\n\r\n//              {/* Top Header */}\r\n//                                                 <div className=\"top-header\">\r\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                                 </div>\r\n                                    \r\n//                                                 {/* Sidebar */}\r\n//                                                 <div className=\"sidebar\">\r\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                                     <p className=\"user-name\">{userName}</p>\r\n                                    \r\n//                                                     <div className=\"menu-options\">\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                                         )}\r\n//                                                         {userRole === \"admin\" && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                                         )}\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n//                                                     </div>\r\n//                                                 </div>\r\n            \r\n//                     <div className=\"main-content\">\r\n//             <h2>Manage Users</h2>\r\n\r\n//             {/* Add User Form */}\r\n//             <div className=\"user-form\">\r\n//                 <h3>Add New User</h3>\r\n//                 <form onSubmit={handleAddUser}>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"\">Select Role</option>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     {role === \"professor\" && (\r\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\r\n//                     )}\r\n//                     <button type=\"submit\">Add User</button>\r\n//                 </form>\r\n//             </div>\r\n\r\n//             {/* User List */}\r\n//             <h3>Users List</h3>\r\n//             <table className=\"users-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Username</th>\r\n//                         <th>Email</th>\r\n//                         <th>Role</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.user_id}>\r\n//                             <td>{user.user_name}</td>\r\n//                             <td>{user.user_email}</td>\r\n//                             <td>{user.role}</td>\r\n//                             <td>\r\n//                                 {/* üîπ Prevent editing or deleting self */}\r\n//                                 {user.user_id !== userId && (\r\n//                                     <>\r\n//                                         <button onClick={() => { \r\n//                                             setSelectedUser(user.user_id); \r\n//                                             setUsername(user.user_name); \r\n//                                             setEmail(user.user_email); \r\n//                                             setRole(user.role); \r\n//                                         }}>\r\n//                                             ‚úèÔ∏è Edit\r\n//                                         </button>\r\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>üóëÔ∏è Delete</button>\r\n//                                     </>\r\n//                                 )}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n\r\n//             {/* Update User Section */}\r\n//             {selectedUser && selectedUser !== userId && (\r\n//                 <div className=\"user-form\">\r\n//                     <h3>Update User</h3>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     <button onClick={handleUpdateUser}>Update User</button>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ManageUsers;\r\n\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\nimport \"./ManageUsers.css\";\r\n\r\nconst ManageUsers = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [researchArea, setResearchArea] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const { deptId, userRole, userId } = useContext(AuthContext);\r\n    const navigate = useNavigate();\r\n    const [userName, setUserName] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setUserName(localStorage.getItem(\"userName\") || \"\");\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const res = await axios.get(\"http://localhost:8800/api/users\", {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            setUsers(res.data.filter(user => user.user_id !== userId));\r\n        } catch (err) {\r\n            console.error(\"‚ùå Error fetching users:\", err);\r\n            alert(\"‚ùå Failed to fetch users.\");\r\n        }\r\n    };\r\n\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n        if (!username || !email || !role) {\r\n            alert(\"‚ùå All fields except Research Area are required.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                alert(\"‚ùå Unauthorized: Please log in again.\");\r\n                return;\r\n            }\r\n\r\n            const response = await axios.post(\r\n                \"http://localhost:8800/api/register\",\r\n                {\r\n                    username,\r\n                    email,\r\n                    password: password || \"default123\",\r\n                    role,\r\n                    dept_id: deptId,\r\n                    research_area: role === \"professor\" ? researchArea : undefined,\r\n                },\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n\r\n            alert(\"‚úÖ User added successfully!\");\r\n            fetchUsers();\r\n            resetForm();\r\n        } catch (error) {\r\n            console.error(\"‚ùå Error adding user:\", error.response?.data || error);\r\n            alert(error.response?.data?.message || \"‚ùå Failed to add user.\");\r\n        }\r\n    };\r\n\r\n    const handleUpdateUser = async () => {\r\n        if (!selectedUser) return;\r\n        if (!username || !email || !role) {\r\n            alert(\"‚ùå All fields except Research Area are required.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            await axios.put(\r\n                `http://localhost:8800/api/update/${selectedUser}`,\r\n                { username, email, role },\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n\r\n            alert(\"‚úÖ User updated successfully!\");\r\n            fetchUsers();\r\n            resetForm();\r\n        } catch (err) {\r\n            console.error(\"‚ùå Error updating user:\", err);\r\n            alert(\"‚ùå Failed to update user.\");\r\n        }\r\n    };\r\n\r\n    const handleDeleteUser = async (user_id) => {\r\n        if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n\r\n            alert(\"‚úÖ User deleted successfully!\");\r\n            fetchUsers();\r\n        } catch (err) {\r\n            console.error(\"‚ùå Error deleting user:\", err);\r\n            alert(\"‚ùå Failed to delete user.\");\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n        setRole(\"\");\r\n        setResearchArea(\"\");\r\n        setPassword(\"\");\r\n        setSelectedUser(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"manage-users-container\">\r\n            {/* Top Header */}\r\n            <div className=\"top-header\">\r\n                <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n                <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n            </div>\r\n\r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                <FaUserCircle size={50} className=\"user-icon\" />\r\n                <p className=\"user-name\">{userName}</p>\r\n\r\n                <div className=\"menu-options\">\r\n                    <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n                    {(userRole === \"hod\" || userRole === \"admin\") && (\r\n                        <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n                    )}\r\n                    {userRole === \"admin\" && (\r\n                        <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n                    )}\r\n                    <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Main Content */}\r\n            <div className=\"main-content\">\r\n                <h2>Manage Users</h2>\r\n\r\n                {/* Add User Form */}\r\n                <div className=\"user-form\">\r\n                    <h3>{selectedUser ? \"Edit User\" : \"Add New User\"}</h3>\r\n                    <form onSubmit={selectedUser ? handleUpdateUser : handleAddUser}>\r\n                        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required={!selectedUser} />\r\n                        <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n                            <option value=\"\">Select Role</option>\r\n                            <option value=\"admin\">Admin</option>\r\n                            <option value=\"professor\">Professor</option>\r\n                        </select>\r\n                        {role === \"professor\" && (\r\n                            <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\r\n                        )}\r\n                        <button type=\"submit\">{selectedUser ? \"Update User\" : \"Add User\"}</button>\r\n                        {selectedUser && <button type=\"button\" onClick={resetForm}>Cancel</button>}\r\n                    </form>\r\n                </div>\r\n\r\n                {/* User List */}\r\n                <h3>Users List</h3>\r\n                <table className=\"users-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user.user_id}>\r\n                                <td>{user.username}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>{user.role}</td>\r\n                                <td>\r\n                                    {user.user_id !== userId && (\r\n                                        <>\r\n                                            <button onClick={() => {\r\n                                                setSelectedUser(user.user_id);\r\n                                                setUsername(user.username);\r\n                                                setEmail(user.email);\r\n                                                setRole(user.role);\r\n                                            }}>‚úèÔ∏è Edit</button>\r\n                                            <button onClick={() => handleDeleteUser(user.user_id)}>üóë Delete</button>\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageUsers;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,WAAW,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\pages\\\\ManageInventory.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./ManageInventory.css\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const ManageInventory = () => {\n//     const { deptId, userRole } = useContext(AuthContext); // Get deptId from AuthContext\n//     const [inventory, setInventory] = useState([]);\n//     const [selectedItem, setSelectedItem] = useState(null);\n//     const [itemName, setItemName] = useState(\"\");\n//     const [itemId, setId] = useState(\"\");\n//     const [status, setStatus] = useState(\"\");\n//     const [quantity, setQuantity] = useState(\"\");\n//     const [room_id, setRoomId] = useState(\"\");\n//     const [category, setCategory] = useState(\"\");\n//     const [lastMaintenance, setLastMaintenance] = useState(\"\");\n//     const navigate = useNavigate();  \n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     useEffect(() => {\n//         fetchInventory();\n//     }, []);\n\n//     const fetchInventory = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const response = await axios.get(`http://localhost:8800/api/inventory`, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             setInventory(response.data);\n//         } catch (error) {\n//             console.error(\"‚ùå Error fetching inventory:\", error);\n//         }\n//     };\n\n//     const handleAddItem = async (e) => {\n//         e.preventDefault();\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.post(\n//                 \"http://localhost:8800/api/inventory\",\n//                 {\n//                     item_id: itemId,\n//                     i_name: itemName,\n//                     category,\n//                     quantity,\n//                     room_id,\n//                     status,\n//                     last_maintenance_date: lastMaintenance,\n//                 },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             alert(\"‚úÖ Inventory item added successfully!\");\n//             fetchInventory();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error adding item:\", error);\n//         }\n//     };\n\n//     const handleUpdateItem = async () => {\n//         if (!selectedItem) return;\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.put(\n//                 `http://localhost:8800/api/inventory/${selectedItem}`,\n//                 {item_id: itemId, i_name: itemName, category, quantity, room_id, status, last_maintenance_date: lastMaintenance },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n//             alert(\"‚úÖ Inventory item updated successfully!\");\n//             fetchInventory();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"‚ùå Error updating item:\", error);\n//         }\n//     };\n\n//     const handleDeleteItem = async (itemId) => {\n//         if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.delete(`http://localhost:8800/api/inventory/${itemId}`, {\n//                 headers: { Authorization: `Bearer ${token}` },\n//             });\n//             alert(\"‚úÖ Inventory item deleted successfully!\");\n//             fetchInventory();\n//         } catch (error) {\n//             console.error(\"‚ùå Error deleting item:\", error);\n//         }\n//     };\n\n//     const resetForm = () => {\n//         setItemName(\"\");\n//         setCategory(\"\");        \n//         setQuantity(\"\");\n//         setRoomId(\"\");\n//         setStatus(\"\");\n//         setLastMaintenance(\"\");\n//         setSelectedItem(null);\n//     };\n\n//     return (\n//         <div className=\"manage-inventory-container\">\n//             {/* Top Header */}\n//                                     <div className=\"top-header\">\n//                                         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\n//                                         <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                     </div>\n\n//                                     {/* Sidebar */}\n//                                     <div className=\"sidebar\">\n//                                         <FaUserCircle size={50} className=\"user-icon\" />\n//                                         <p className=\"user-name\">{userName}</p>\n\n//                                         <div className=\"menu-options\">\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                             {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                             )}\n//                                             {userRole === \"admin\" && (\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                             )}\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\n//                                         </div>\n//                                     </div>\n\n//         <div>\n//             <h2>Manage Inventory</h2>\n\n//             {userRole === \"admin\" && (\n//                 <div className=\"inventory-form\">\n//                     <h3>{selectedItem ? \"Update Item\" : \"Add New Item\"}</h3>\n//                     <form onSubmit={selectedItem ? handleUpdateItem : handleAddItem}>\n//                         <input type=\"text\" placeholder=\"Item Id\" value={itemId} onChange={(e) => setId(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Item Name\" value={itemName} onChange={(e) => setItemName(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Category\" value={category} onChange={(e) => setCategory(e.target.value)} required />\n//                         <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"RoomId\" value={room_id} onChange={(e) => setRoomId(e.target.value)} required />\n//                         <input type=\"text\" placeholder=\"Condition\" value={status} onChange={(e) => setStatus(e.target.value)} required />\n//                         <input type=\"date\" placeholder=\"Last Maintenance Date\" value={lastMaintenance} onChange={(e) => setLastMaintenance(e.target.value)} />\n//                         <button type=\"submit\">{selectedItem ? \"Update Item\" : \"Add Item\"}</button>\n//                     </form>\n//                 </div>\n//             )}\n\n//             <h3>Inventory List</h3>\n//             <table className=\"inventory-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Item Name</th>\n//                         <th>Category</th>\n//                         <th>Quantity</th>\n//                         <th>Location</th>\n//                         <th>Status</th>\n//                         <th>Last Maintenance</th>\n//                         {userRole === \"admin\" && <th>Actions</th>}\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {inventory.map((item) => (\n//                         <tr key={item.item_id}>\n//                             <td>{item.i_name}</td>\n//                             <td>{item.category}</td>\n//                             <td>{item.quantity}</td>\n//                             <td>{item.room_id}</td>\n//                             <td>{item.status}</td>\n//                             <td>{item.last_maintenance_date}</td>\n//                             {userRole === \"admin\" && (\n//                                 <td>\n//                                     <button onClick={() => { \n//                                         setSelectedItem(item.item_id); \n//                                         setItemName(item.i_name);\n//                                         setStatus\n//                             (item.category);\n//                                  setQuantity(item.quantity);\n//                                         setRoomId(item.room_id);\n//                                         setStatus(item.status);\n//                                         setLastMaintenance(item.last_maintenance_date);\n//                                     }}>‚úèÔ∏è Edit</button>\n//                                     <button onClick={() => handleDeleteItem(item.item_id)}>üóëÔ∏è Delete</button>\n//                                 </td>\n//                             )}\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default ManageInventory;\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from '../auth/AuthContext';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { FaUserCircle } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManageInventory = () => {\n  _s();\n  const {\n    deptId,\n    userRole\n  } = useContext(AuthContext);\n  const [inventory, setInventory] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [itemName, setItemName] = useState('');\n  const [itemId, setId] = useState('');\n  const [status, setStatus] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [room_id, setRoomId] = useState('');\n  const [category, setCategory] = useState('');\n  const [lastMaintenance, setLastMaintenance] = useState('');\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(localStorage.getItem('userName') || '');\n  useEffect(() => {\n    fetchInventory();\n  }, []);\n  const fetchInventory = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:8800/api/inventory', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setInventory(response.data);\n    } catch (error) {\n      console.error('‚ùå Error fetching inventory:', error);\n    }\n  };\n  const handleAddItem = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token');\n      await axios.post('http://localhost:8800/api/inventory', {\n        item_id: itemId,\n        i_name: itemName,\n        category,\n        quantity,\n        room_id,\n        status,\n        last_maintenance_date: lastMaintenance\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert('‚úÖ Inventory item added successfully!');\n      fetchInventory();\n      resetForm();\n    } catch (error) {\n      console.error('‚ùå Error adding item:', error);\n    }\n  };\n  const resetForm = () => {\n    setItemName('');\n    setCategory('');\n    setQuantity('');\n    setRoomId('');\n    setStatus('');\n    setLastMaintenance('');\n    setSelectedItem(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-inventory-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dharmshinh Desai University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n        size: 50,\n        className: \"user-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Inventory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"inventory-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Item Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Maintenance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: inventory.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.i_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.quantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.room_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.last_maintenance_date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 33\n            }, this)]\n          }, item.item_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n                .manage-inventory-container {\n                    padding: 20px;\n                    margin: 20px;\n                }\n                .inventory-table {\n                    width: 80%;\n                    margin: auto;\n                    border-collapse: collapse;\n                }\n                .inventory-table th, .inventory-table td {\n                    padding: 12px;\n                    border: 1px solid #ddd;\n                    text-align: center;\n                }\n                .inventory-table th {\n                    background-color: #f4f4f4;\n                }\n                .sidebar {\n                    width: 200px;\n                    padding: 15px;\n                    background-color: #efefef;\n                }\n                .top-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 10px;\n                    background-color: #333;\n                    color: #fff;\n                }\n            `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageInventory, \"wfYU76E5eKvYQv2JVOLXQhE50+c=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageInventory;\nexport default ManageInventory;\nvar _c;\n$RefreshReg$(_c, \"ManageInventory\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","useParams","useNavigate","FaUserCircle","jsxDEV","_jsxDEV","ManageInventory","_s","deptId","userRole","inventory","setInventory","selectedItem","setSelectedItem","itemName","setItemName","itemId","setId","status","setStatus","quantity","setQuantity","room_id","setRoomId","category","setCategory","lastMaintenance","setLastMaintenance","navigate","userName","setUserName","localStorage","getItem","fetchInventory","token","response","get","headers","Authorization","data","error","console","handleAddItem","e","preventDefault","post","item_id","i_name","last_maintenance_date","alert","resetForm","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","map","item","jsx","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/ManageInventory.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ManageInventory.css\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n// const ManageInventory = () => {\r\n//     const { deptId, userRole } = useContext(AuthContext); // Get deptId from AuthContext\r\n//     const [inventory, setInventory] = useState([]);\r\n//     const [selectedItem, setSelectedItem] = useState(null);\r\n//     const [itemName, setItemName] = useState(\"\");\r\n//     const [itemId, setId] = useState(\"\");\r\n//     const [status, setStatus] = useState(\"\");\r\n//     const [quantity, setQuantity] = useState(\"\");\r\n//     const [room_id, setRoomId] = useState(\"\");\r\n//     const [category, setCategory] = useState(\"\");\r\n//     const [lastMaintenance, setLastMaintenance] = useState(\"\");\r\n//     const navigate = useNavigate();  \r\n//     const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n    \r\n\r\n//     useEffect(() => {\r\n//         fetchInventory();\r\n//     }, []);\r\n\r\n//     const fetchInventory = async () => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const response = await axios.get(`http://localhost:8800/api/inventory`, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             setInventory(response.data);\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error fetching inventory:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleAddItem = async (e) => {\r\n//         e.preventDefault();\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.post(\r\n//                 \"http://localhost:8800/api/inventory\",\r\n//                 {\r\n//                     item_id: itemId,\r\n//                     i_name: itemName,\r\n//                     category,\r\n//                     quantity,\r\n//                     room_id,\r\n//                     status,\r\n//                     last_maintenance_date: lastMaintenance,\r\n//                 },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n//             alert(\"‚úÖ Inventory item added successfully!\");\r\n//             fetchInventory();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error adding item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleUpdateItem = async () => {\r\n//         if (!selectedItem) return;\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.put(\r\n//                 `http://localhost:8800/api/inventory/${selectedItem}`,\r\n//                 {item_id: itemId, i_name: itemName, category, quantity, room_id, status, last_maintenance_date: lastMaintenance },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n//             alert(\"‚úÖ Inventory item updated successfully!\");\r\n//             fetchInventory();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error updating item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const handleDeleteItem = async (itemId) => {\r\n//         if (!window.confirm(\"Are you sure you want to delete this item?\")) return;\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.delete(`http://localhost:8800/api/inventory/${itemId}`, {\r\n//                 headers: { Authorization: `Bearer ${token}` },\r\n//             });\r\n//             alert(\"‚úÖ Inventory item deleted successfully!\");\r\n//             fetchInventory();\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error deleting item:\", error);\r\n//         }\r\n//     };\r\n\r\n//     const resetForm = () => {\r\n//         setItemName(\"\");\r\n//         setCategory(\"\");        \r\n//         setQuantity(\"\");\r\n//         setRoomId(\"\");\r\n//         setStatus(\"\");\r\n//         setLastMaintenance(\"\");\r\n//         setSelectedItem(null);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"manage-inventory-container\">\r\n//             {/* Top Header */}\r\n//                                     <div className=\"top-header\">\r\n//                                         <button className=\"back-button\" onClick={() => navigate(-1)}>‚Üê Back</button>\r\n//                                         <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                     </div>\r\n                        \r\n//                                     {/* Sidebar */}\r\n//                                     <div className=\"sidebar\">\r\n//                                         <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                         <p className=\"user-name\">{userName}</p>\r\n                        \r\n//                                         <div className=\"menu-options\">\r\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                             {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                             )}\r\n//                                             {userRole === \"admin\" && (\r\n//                                                 <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                             )}\r\n//                                             <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>‚öôÔ∏è Settings</button>\r\n//                                         </div>\r\n//                                     </div>\r\n\r\n//         <div>\r\n//             <h2>Manage Inventory</h2>\r\n\r\n//             {userRole === \"admin\" && (\r\n//                 <div className=\"inventory-form\">\r\n//                     <h3>{selectedItem ? \"Update Item\" : \"Add New Item\"}</h3>\r\n//                     <form onSubmit={selectedItem ? handleUpdateItem : handleAddItem}>\r\n//                         <input type=\"text\" placeholder=\"Item Id\" value={itemId} onChange={(e) => setId(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Item Name\" value={itemName} onChange={(e) => setItemName(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Category\" value={category} onChange={(e) => setCategory(e.target.value)} required />\r\n//                         <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"RoomId\" value={room_id} onChange={(e) => setRoomId(e.target.value)} required />\r\n//                         <input type=\"text\" placeholder=\"Condition\" value={status} onChange={(e) => setStatus(e.target.value)} required />\r\n//                         <input type=\"date\" placeholder=\"Last Maintenance Date\" value={lastMaintenance} onChange={(e) => setLastMaintenance(e.target.value)} />\r\n//                         <button type=\"submit\">{selectedItem ? \"Update Item\" : \"Add Item\"}</button>\r\n//                     </form>\r\n//                 </div>\r\n//             )}\r\n\r\n//             <h3>Inventory List</h3>\r\n//             <table className=\"inventory-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Item Name</th>\r\n//                         <th>Category</th>\r\n//                         <th>Quantity</th>\r\n//                         <th>Location</th>\r\n//                         <th>Status</th>\r\n//                         <th>Last Maintenance</th>\r\n//                         {userRole === \"admin\" && <th>Actions</th>}\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {inventory.map((item) => (\r\n//                         <tr key={item.item_id}>\r\n//                             <td>{item.i_name}</td>\r\n//                             <td>{item.category}</td>\r\n//                             <td>{item.quantity}</td>\r\n//                             <td>{item.room_id}</td>\r\n//                             <td>{item.status}</td>\r\n//                             <td>{item.last_maintenance_date}</td>\r\n//                             {userRole === \"admin\" && (\r\n//                                 <td>\r\n//                                     <button onClick={() => { \r\n//                                         setSelectedItem(item.item_id); \r\n//                                         setItemName(item.i_name);\r\n//                                         setStatus\r\n//                             (item.category);\r\n//                                  setQuantity(item.quantity);\r\n//                                         setRoomId(item.room_id);\r\n//                                         setStatus(item.status);\r\n//                                         setLastMaintenance(item.last_maintenance_date);\r\n//                                     }}>‚úèÔ∏è Edit</button>\r\n//                                     <button onClick={() => handleDeleteItem(item.item_id)}>üóëÔ∏è Delete</button>\r\n//                                 </td>\r\n//                             )}\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ManageInventory;\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\n\r\nconst ManageInventory = () => {\r\n    const { deptId, userRole } = useContext(AuthContext);\r\n    const [inventory, setInventory] = useState([]);\r\n    const [selectedItem, setSelectedItem] = useState(null);\r\n    const [itemName, setItemName] = useState('');\r\n    const [itemId, setId] = useState('');\r\n    const [status, setStatus] = useState('');\r\n    const [quantity, setQuantity] = useState('');\r\n    const [room_id, setRoomId] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [lastMaintenance, setLastMaintenance] = useState('');\r\n    const navigate = useNavigate();\r\n    const [userName, setUserName] = useState(localStorage.getItem('userName') || '');\r\n\r\n    useEffect(() => {\r\n        fetchInventory();\r\n    }, []);\r\n\r\n    const fetchInventory = async () => {\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            const response = await axios.get('http://localhost:8800/api/inventory', {\r\n                headers: { Authorization: `Bearer ${token}` },\r\n            });\r\n            setInventory(response.data);\r\n        } catch (error) {\r\n            console.error('‚ùå Error fetching inventory:', error);\r\n        }\r\n    };\r\n\r\n    const handleAddItem = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('token');\r\n            await axios.post('http://localhost:8800/api/inventory', {\r\n                item_id: itemId,\r\n                i_name: itemName,\r\n                category,\r\n                quantity,\r\n                room_id,\r\n                status,\r\n                last_maintenance_date: lastMaintenance,\r\n            }, { headers: { Authorization: `Bearer ${token}` } });\r\n            alert('‚úÖ Inventory item added successfully!');\r\n            fetchInventory();\r\n            resetForm();\r\n        } catch (error) {\r\n            console.error('‚ùå Error adding item:', error);\r\n        }\r\n    };\r\n\r\n    const resetForm = () => {\r\n        setItemName('');\r\n        setCategory('');\r\n        setQuantity('');\r\n        setRoomId('');\r\n        setStatus('');\r\n        setLastMaintenance('');\r\n        setSelectedItem(null);\r\n    };\r\n\r\n    return (\r\n        <div className='manage-inventory-container'>\r\n            <div className='top-header'>\r\n                <button className='back-button' onClick={() => navigate(-1)}>‚Üê Back</button>\r\n                <h1>Dharmshinh Desai University</h1>\r\n            </div>\r\n            <div className='sidebar'>\r\n                <FaUserCircle size={50} className='user-icon' />\r\n                <p>{userName}</p>\r\n            </div>\r\n            <div>\r\n                <h2>Manage Inventory</h2>\r\n                <table className='inventory-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Item Name</th>\r\n                            <th>Category</th>\r\n                            <th>Quantity</th>\r\n                            <th>Location</th>\r\n                            <th>Status</th>\r\n                            <th>Last Maintenance</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {inventory.map((item) => (\r\n                            <tr key={item.item_id}>\r\n                                <td>{item.i_name}</td>\r\n                                <td>{item.category}</td>\r\n                                <td>{item.quantity}</td>\r\n                                <td>{item.room_id}</td>\r\n                                <td>{item.status}</td>\r\n                                <td>{item.last_maintenance_date}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <style jsx>{`\r\n                .manage-inventory-container {\r\n                    padding: 20px;\r\n                    margin: 20px;\r\n                }\r\n                .inventory-table {\r\n                    width: 80%;\r\n                    margin: auto;\r\n                    border-collapse: collapse;\r\n                }\r\n                .inventory-table th, .inventory-table td {\r\n                    padding: 12px;\r\n                    border: 1px solid #ddd;\r\n                    text-align: center;\r\n                }\r\n                .inventory-table th {\r\n                    background-color: #f4f4f4;\r\n                }\r\n                .sidebar {\r\n                    width: 200px;\r\n                    padding: 15px;\r\n                    background-color: #efefef;\r\n                }\r\n                .top-header {\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    align-items: center;\r\n                    padding: 10px;\r\n                    background-color: #333;\r\n                    color: #fff;\r\n                }\r\n            `}</style>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageInventory;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SAASC,YAAY,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC,MAAM;IAAEC;EAAS,CAAC,GAAGX,UAAU,CAACE,WAAW,CAAC;EACpD,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,MAAM,EAAEC,KAAK,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,MAAM,EAAEC,SAAS,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,OAAO,EAAEC,SAAS,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6B,eAAe,EAAEC,kBAAkB,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM+B,QAAQ,GAAG1B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAGjC,QAAQ,CAACkC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;EAEhFpC,SAAS,CAAC,MAAM;IACZqC,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACA,MAAMC,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMG,QAAQ,GAAG,MAAMpC,KAAK,CAACqC,GAAG,CAAC,qCAAqC,EAAE;QACpEC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAChD,CAAC,CAAC;MACFvB,YAAY,CAACwB,QAAQ,CAACI,IAAI,CAAC;IAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACvD;EACJ,CAAC;EAED,MAAME,aAAa,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACA,MAAMV,KAAK,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMjC,KAAK,CAAC8C,IAAI,CAAC,qCAAqC,EAAE;QACpDC,OAAO,EAAE9B,MAAM;QACf+B,MAAM,EAAEjC,QAAQ;QAChBU,QAAQ;QACRJ,QAAQ;QACRE,OAAO;QACPJ,MAAM;QACN8B,qBAAqB,EAAEtB;MAC3B,CAAC,EAAE;QAAEW,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUJ,KAAK;QAAG;MAAE,CAAC,CAAC;MACrDe,KAAK,CAAC,sCAAsC,CAAC;MAC7ChB,cAAc,CAAC,CAAC;MAChBiB,SAAS,CAAC,CAAC;IACf,CAAC,CAAC,OAAOV,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpBnC,WAAW,CAAC,EAAE,CAAC;IACfU,WAAW,CAAC,EAAE,CAAC;IACfJ,WAAW,CAAC,EAAE,CAAC;IACfE,SAAS,CAAC,EAAE,CAAC;IACbJ,SAAS,CAAC,EAAE,CAAC;IACbQ,kBAAkB,CAAC,EAAE,CAAC;IACtBd,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,oBACIR,OAAA;IAAK8C,SAAS,EAAC,4BAA4B;IAAAC,QAAA,gBACvC/C,OAAA;MAAK8C,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB/C,OAAA;QAAQ8C,SAAS,EAAC,aAAa;QAACE,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAAC,CAAC,CAAC,CAAE;QAAAwB,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5EpD,OAAA;QAAA+C,QAAA,EAAI;MAA2B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNpD,OAAA;MAAK8C,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACpB/C,OAAA,CAACF,YAAY;QAACuD,IAAI,EAAE,EAAG;QAACP,SAAS,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDpD,OAAA;QAAA+C,QAAA,EAAIvB;MAAQ;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACNpD,OAAA;MAAA+C,QAAA,gBACI/C,OAAA;QAAA+C,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpD,OAAA;QAAO8C,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9B/C,OAAA;UAAA+C,QAAA,eACI/C,OAAA;YAAA+C,QAAA,gBACI/C,OAAA;cAAA+C,QAAA,EAAI;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClBpD,OAAA;cAAA+C,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpD,OAAA;cAAA+C,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpD,OAAA;cAAA+C,QAAA,EAAI;YAAQ;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACjBpD,OAAA;cAAA+C,QAAA,EAAI;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfpD,OAAA;cAAA+C,QAAA,EAAI;YAAgB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRpD,OAAA;UAAA+C,QAAA,EACK1C,SAAS,CAACiD,GAAG,CAAEC,IAAI,iBAChBvD,OAAA;YAAA+C,QAAA,gBACI/C,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAACb;YAAM;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBpD,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAACpC;YAAQ;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBpD,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAACxC;YAAQ;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBpD,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAACtC;YAAO;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACvBpD,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAAC1C;YAAM;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACtBpD,OAAA;cAAA+C,QAAA,EAAKQ,IAAI,CAACZ;YAAqB;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA,GANhCG,IAAI,CAACd,OAAO;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAOjB,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eAENpD,OAAA;MAAOwD,GAAG;MAAAT,QAAA,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAClD,EAAA,CArIID,eAAe;EAAA,QAWAJ,WAAW;AAAA;AAAA4D,EAAA,GAX1BxD,eAAe;AAuIrB,eAAeA,eAAe;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
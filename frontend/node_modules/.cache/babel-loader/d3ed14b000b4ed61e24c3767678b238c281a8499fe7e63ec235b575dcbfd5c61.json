{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\pages\\\\ManageUsers.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./ManageUsers.css\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { FaUserCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ManageUsers = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [researchArea, setResearchArea] = useState(\"\"); // For professors\n  const [password, setPassword] = useState(\"\"); // New password field\n  const {\n    deptId,\n    userRole,\n    userId\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async () => {\n    try {\n      const token = localStorage.getItem(\"token\");\n      const res = await axios.get(\"http://localhost:8800/api/users\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Exclude the logged-in user from the list\n      const filteredUsers = res.data.filter(user => user.user_id !== userId);\n      setUsers(filteredUsers);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n      alert(\"Failed to fetch users.\");\n    }\n  };\n\n  // Handle Adding a New User\n  const handleAddUser = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem(\"token\");\n      if (!token) {\n        alert(\"Unauthorized: Please log in again.\");\n        return;\n      }\n      if (!deptId) {\n        alert(\"Department information missing. Please re-login.\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:8800/api/register\", {\n        username,\n        email,\n        password,\n        role,\n        dept_id: deptId,\n        research_area: role === \"professor\" ? researchArea : undefined\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"User added successfully!\");\n      console.log(response.data);\n      fetchUsers();\n      resetForm();\n    } catch (error) {\n      var _error$response, _error$response2, _error$response2$data;\n      console.error(\"Error adding user:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Failed to add user.\");\n    }\n  };\n\n  // Handle Updating a User\n  const handleUpdateUser = async () => {\n    if (!selectedUser) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.put(`http://localhost:8800/api/update/${selectedUser}`, {\n        username,\n        email,\n        role\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"User updated successfully!\");\n      fetchUsers();\n      resetForm();\n    } catch (err) {\n      console.error(\"Error updating user:\", err);\n      alert(\"Failed to update user.\");\n    }\n  };\n\n  // Handle Deleting a User\n  const handleDeleteUser = async user_id => {\n    if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\n    try {\n      const token = localStorage.getItem(\"token\");\n      await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      alert(\"User deleted successfully!\");\n      fetchUsers();\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n      alert(\"Failed to delete user.\");\n    }\n  };\n\n  // Reset Form Fields\n  const resetForm = () => {\n    setUsername(\"\");\n    setEmail(\"\");\n    setRole(\"\");\n    setResearchArea(\"\");\n    setPassword(\"\");\n    setSelectedUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"manage-users-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => navigate(-1),\n        children: \"\\u2190 Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"university-name\",\n        children: \"Dharmshinh Desai University\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(FaUserCircle, {\n        size: 50,\n        className: \"user-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"user-name\",\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/dashboard\"),\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), (userRole === \"hod\" || userRole === \"admin\") && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/manage-users\"),\n          children: \"Manage Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), userRole === \"admin\" && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/manage-inventory\"),\n          children: \"Manage Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => navigate(\"/settings\"),\n          children: \"\\u2699\\uFE0F Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add New User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleAddUser,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: role,\n            onChange: e => setRole(e.target.value),\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"admin\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"professor\",\n              children: \"Professor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), role === \"professor\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Research Area (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Research Area (Optional)\",\n              value: researchArea,\n              onChange: e => setResearchArea(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Add User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"users-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.user_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.user_email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.user_id !== userId && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit-button\",\n                  onClick: () => {\n                    setSelectedUser(user.user_id);\n                    setUsername(user.user_name);\n                    setEmail(user.user_email);\n                    setRole(user.role);\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: () => handleDeleteUser(user.user_id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)]\n          }, user.user_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), selectedUser && selectedUser !== userId && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Username\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: role,\n          onChange: e => setRole(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"admin\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"professor\",\n            children: \"Professor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateUser,\n          children: \"Update User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_s(ManageUsers, \"VEG6y32FsJgJKfo5eW12lxSfUgo=\", false, function () {\n  return [useNavigate];\n});\n_c = ManageUsers;\nexport default ManageUsers;\n\n// import React, { useEffect, useState, useContext } from \"react\";\n// import axios from \"axios\";\n// import \"./ManageUsers.css\";\n// import { AuthContext } from \"../auth/AuthContext\";\n// import { useParams ,useNavigate} from \"react-router-dom\";\n// import { FaUserCircle } from \"react-icons/fa\";\n\n// const ManageUsers = () => {\n//     const [users, setUsers] = useState([]);\n//     const [selectedUser, setSelectedUser] = useState(null);\n//     const [username, setUsername] = useState(\"\");\n//     const [email, setEmail] = useState(\"\");\n//     const [role, setRole] = useState(\"\");\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\n//     const [password, setPassword] = useState(\"\"); // New password field\n//     const { deptId, userRole, userId } = useContext(AuthContext);\n//       const navigate = useNavigate();  \n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\n\n//     useEffect(() => {\n//         fetchUsers();\n//     }, []);\n\n//     const fetchUsers = async () => {\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             // 🔹 Exclude the logged-in user from the list\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\n//             setUsers(filteredUsers);\n//         } catch (err) {\n//             console.error(\"❌ Error fetching users:\", err);\n//             alert(\"❌ Failed to fetch users.\");\n//         }\n//     };\n\n//     // ✅ Handle Adding a New User\n//     const handleAddUser = async (e) => {\n//         e.preventDefault();\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) {\n//                 alert(\"❌ Unauthorized: Please log in again.\");\n//                 return;\n//             }\n\n//             if (!deptId) {\n//                 alert(\"❌ Department information missing. Please re-login.\");\n//                 return;\n//             }\n\n//             const response = await axios.post(\n//                 \"http://localhost:8800/api/register\",\n//                 {\n//                     username,\n//                     email,\n//                     password,\n//                     role,\n//                     dept_id: deptId, \n//                     research_area: role === \"professor\" ? researchArea : undefined\n//                 },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"✅ User added successfully!\");\n//             console.log(response.data);\n//             fetchUsers();\n//             resetForm();\n//         } catch (error) {\n//             console.error(\"❌ Error adding user:\", error.response?.data || error);\n//             alert(error.response?.data?.message || \"❌ Failed to add user.\");\n//         }\n//     };\n\n//     // ✅ Handle Updating a User\n//     const handleUpdateUser = async () => {\n//         if (!selectedUser) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n\n//             await axios.put(\n//                 `http://localhost:8800/api/update/${selectedUser}`,\n//                 { username, email, role },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             alert(\"✅ User updated successfully!\");\n//             fetchUsers();\n//             resetForm();\n//         } catch (err) {\n//             console.error(\"❌ Error updating user:\", err);\n//             alert(\"❌ Failed to update user.\");\n//         }\n//     };\n\n//     // ✅ Handle Deleting a User\n//     const handleDeleteUser = async (user_id) => {\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\n//                 headers: { Authorization: `Bearer ${token}` }\n//             });\n\n//             alert(\"✅ User deleted successfully!\");\n//             fetchUsers();\n//         } catch (err) {\n//             console.error(\"❌ Error deleting user:\", err);\n//             alert(\"❌ Failed to delete user.\");\n//         }\n//     };\n\n//     // ✅ Reset Form Fields\n//     const resetForm = () => {\n//         setUsername(\"\");\n//         setEmail(\"\");\n//         setRole(\"\");\n//         setResearchArea(\"\");\n//         setPassword(\"\");\n//         setSelectedUser(null);\n//     };\n\n//     return (\n//         <div className=\"manage-users-container\">\n\n//              {/* Top Header */}\n//                                                 <div className=\"top-header\">\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>← Back</button>\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\n//                                                 </div>\n\n//                                                 {/* Sidebar */}\n//                                                 <div className=\"sidebar\">\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\n//                                                     <p className=\"user-name\">{userName}</p>\n\n//                                                     <div className=\"menu-options\">\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\n//                                                         )}\n//                                                         {userRole === \"admin\" && (\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\n//                                                         )}\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>⚙️ Settings</button>\n//                                                     </div>\n//                                                 </div>\n\n//                     <div className=\"main-content\">\n//             <h2>Manage Users</h2>\n\n//             {/* Add User Form */}\n//             <div className=\"user-form\">\n//                 <h3>Add New User</h3>\n//                 <form onSubmit={handleAddUser}>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"\">Select Role</option>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     {role === \"professor\" && (\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\n//                     )}\n//                     <button type=\"submit\">Add User</button>\n//                 </form>\n//             </div>\n\n//             {/* User List */}\n//             <h3>Users List</h3>\n//             <table className=\"users-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>Username</th>\n//                         <th>Email</th>\n//                         <th>Role</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.user_id}>\n//                             <td>{user.user_name}</td>\n//                             <td>{user.user_email}</td>\n//                             <td>{user.role}</td>\n//                             <td>\n//                                 {/* 🔹 Prevent editing or deleting self */}\n//                                 {user.user_id !== userId && (\n//                                     <>\n//                                         <button onClick={() => { \n//                                             setSelectedUser(user.user_id); \n//                                             setUsername(user.user_name); \n//                                             setEmail(user.user_email); \n//                                             setRole(user.role); \n//                                         }}>\n//                                             ✏️ Edit\n//                                         </button>\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>🗑️ Delete</button>\n//                                     </>\n//                                 )}\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n\n//             {/* Update User Section */}\n//             {selectedUser && selectedUser !== userId && (\n//                 <div className=\"user-form\">\n//                     <h3>Update User</h3>\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\n//                         <option value=\"admin\">Admin</option>\n//                         <option value=\"professor\">Professor</option>\n//                     </select>\n//                     <button onClick={handleUpdateUser}>Update User</button>\n//                 </div>\n//             )}\n//         </div>\n//         </div>\n//     );\n// };\n\n// export default ManageUsers;\nvar _c;\n$RefreshReg$(_c, \"ManageUsers\");","map":{"version":3,"names":["React","useEffect","useState","useContext","axios","AuthContext","useParams","useNavigate","FaUserCircle","jsxDEV","_jsxDEV","Fragment","_Fragment","ManageUsers","_s","users","setUsers","selectedUser","setSelectedUser","username","setUsername","email","setEmail","role","setRole","researchArea","setResearchArea","password","setPassword","deptId","userRole","userId","navigate","userName","setUserName","localStorage","getItem","fetchUsers","token","res","get","headers","Authorization","filteredUsers","data","filter","user","user_id","err","console","error","alert","handleAddUser","e","preventDefault","response","post","dept_id","research_area","undefined","log","resetForm","_error$response","_error$response2","_error$response2$data","message","handleUpdateUser","put","handleDeleteUser","window","confirm","delete","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","size","onSubmit","type","placeholder","value","onChange","target","required","map","user_name","user_email","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/ManageUsers.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./ManageUsers.css\";\r\nimport { AuthContext } from \"../auth/AuthContext\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { FaUserCircle } from \"react-icons/fa\";\r\n\r\nconst ManageUsers = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [role, setRole] = useState(\"\");\r\n    const [researchArea, setResearchArea] = useState(\"\"); // For professors\r\n    const [password, setPassword] = useState(\"\"); // New password field\r\n    const { deptId, userRole, userId } = useContext(AuthContext);\r\n    const navigate = useNavigate();  \r\n    const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n\r\n    useEffect(() => {\r\n        fetchUsers();\r\n    }, []);\r\n\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            const res = await axios.get(\"http://localhost:8800/api/users\", {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n\r\n            // Exclude the logged-in user from the list\r\n            const filteredUsers = res.data.filter(user => user.user_id !== userId);\r\n            setUsers(filteredUsers);\r\n        } catch (err) {\r\n            console.error(\"Error fetching users:\", err);\r\n            alert(\"Failed to fetch users.\");\r\n        }\r\n    };\r\n\r\n    // Handle Adding a New User\r\n    const handleAddUser = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            if (!token) {\r\n                alert(\"Unauthorized: Please log in again.\");\r\n                return;\r\n            }\r\n\r\n            if (!deptId) {\r\n                alert(\"Department information missing. Please re-login.\");\r\n                return;\r\n            }\r\n\r\n            const response = await axios.post(\r\n                \"http://localhost:8800/api/register\",\r\n                {\r\n                    username,\r\n                    email,\r\n                    password,\r\n                    role,\r\n                    dept_id: deptId,\r\n                    research_area: role === \"professor\" ? researchArea : undefined\r\n                },\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n\r\n            alert(\"User added successfully!\");\r\n            console.log(response.data);\r\n            fetchUsers();\r\n            resetForm();\r\n        } catch (error) {\r\n            console.error(\"Error adding user:\", error.response?.data || error);\r\n            alert(error.response?.data?.message || \"Failed to add user.\");\r\n        }\r\n    };\r\n\r\n    // Handle Updating a User\r\n    const handleUpdateUser = async () => {\r\n        if (!selectedUser) return;\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n\r\n            await axios.put(\r\n                `http://localhost:8800/api/update/${selectedUser}`,\r\n                { username, email, role },\r\n                { headers: { Authorization: `Bearer ${token}` } }\r\n            );\r\n\r\n            alert(\"User updated successfully!\");\r\n            fetchUsers();\r\n            resetForm();\r\n        } catch (err) {\r\n            console.error(\"Error updating user:\", err);\r\n            alert(\"Failed to update user.\");\r\n        }\r\n    };\r\n\r\n    // Handle Deleting a User\r\n    const handleDeleteUser = async (user_id) => {\r\n        if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\r\n\r\n        try {\r\n            const token = localStorage.getItem(\"token\");\r\n            await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\r\n                headers: { Authorization: `Bearer ${token}` }\r\n            });\r\n\r\n            alert(\"User deleted successfully!\");\r\n            fetchUsers();\r\n        } catch (err) {\r\n            console.error(\"Error deleting user:\", err);\r\n            alert(\"Failed to delete user.\");\r\n        }\r\n    };\r\n\r\n    // Reset Form Fields\r\n    const resetForm = () => {\r\n        setUsername(\"\");\r\n        setEmail(\"\");\r\n        setRole(\"\");\r\n        setResearchArea(\"\");\r\n        setPassword(\"\");\r\n        setSelectedUser(null);\r\n    };\r\n\r\n    return (\r\n        <div className=\"manage-users-container\">\r\n            {/* Top Header */}\r\n            <div className=\"top-header\">\r\n                <button className=\"back-button\" onClick={() => navigate(-1)}>← Back</button>\r\n                <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n            </div>\r\n                                    \r\n            {/* Sidebar */}\r\n            <div className=\"sidebar\">\r\n                <FaUserCircle size={50} className=\"user-icon\" />\r\n                <p className=\"user-name\">{userName}</p>\r\n                                    \r\n                <div className=\"menu-options\">\r\n                    <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n                    {(userRole === \"hod\" || userRole === \"admin\") && (\r\n                        <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n                    )}\r\n                    {userRole === \"admin\" && (\r\n                        <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n                    )}\r\n                    <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>⚙️ Settings</button>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"main-content\">\r\n                <h2>Manage Users</h2>\r\n\r\n                {/* Add User Form */}\r\n                <div className=\"user-form\">\r\n                    <h3>Add New User</h3>\r\n                    <form onSubmit={handleAddUser}>\r\n                        {/* Added label for accessibility */}\r\n                        <label>Username</label>\r\n                        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                        \r\n                        <label>Email</label>\r\n                        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                        \r\n                        <label>Password</label>\r\n                        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n                        \r\n                        <label>Role</label>\r\n                        <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n                            <option value=\"\">Select Role</option>\r\n                            <option value=\"admin\">Admin</option>\r\n                            <option value=\"professor\">Professor</option>\r\n                        </select>\r\n                        {role === \"professor\" && (\r\n                            <>\r\n                                <label>Research Area (Optional)</label>\r\n                                <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\r\n                            </>\r\n                        )}\r\n                        <button type=\"submit\">Add User</button>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Users List */}\r\n                <h3>Users List</h3>\r\n                <table className=\"users-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Username</th>\r\n                            <th>Email</th>\r\n                            <th>Role</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map((user) => (\r\n                            <tr key={user.user_id}>\r\n                                <td>{user.user_name}</td>\r\n                                <td>{user.user_email}</td>\r\n                                <td>{user.role}</td>\r\n                                <td>\r\n                                    {/* Prevent editing or deleting self */}\r\n                                    {user.user_id !== userId && (\r\n                                        <>\r\n                                            <button className=\"edit-button\" onClick={() => { \r\n                                                setSelectedUser(user.user_id); \r\n                                                setUsername(user.user_name); \r\n                                                setEmail(user.user_email); \r\n                                                setRole(user.role); \r\n                                            }}>\r\n                                                Edit\r\n                                            </button>\r\n                                            <button className=\"delete-button\" onClick={() => handleDeleteUser(user.user_id)}>Delete</button>\r\n                                        </>\r\n                                    )}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n\r\n                {/* Update User Section */}\r\n                {selectedUser && selectedUser !== userId && (\r\n                    <div className=\"user-form\">\r\n                        <h3>Update User</h3>\r\n                        <label>Username</label>\r\n                        <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n                        \r\n                        <label>Email</label>\r\n                        <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n                        \r\n                        <label>Role</label>\r\n                        <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n                            <option value=\"admin\">Admin</option>\r\n                            <option value=\"professor\">Professor</option>\r\n                        </select>\r\n                        <button onClick={handleUpdateUser}>Update User</button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManageUsers;\r\n\r\n\r\n// import React, { useEffect, useState, useContext } from \"react\";\r\n// import axios from \"axios\";\r\n// import \"./ManageUsers.css\";\r\n// import { AuthContext } from \"../auth/AuthContext\";\r\n// import { useParams ,useNavigate} from \"react-router-dom\";\r\n// import { FaUserCircle } from \"react-icons/fa\";\r\n\r\n// const ManageUsers = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [selectedUser, setSelectedUser] = useState(null);\r\n//     const [username, setUsername] = useState(\"\");\r\n//     const [email, setEmail] = useState(\"\");\r\n//     const [role, setRole] = useState(\"\");\r\n//     const [researchArea, setResearchArea] = useState(\"\"); // For professors\r\n//     const [password, setPassword] = useState(\"\"); // New password field\r\n//     const { deptId, userRole, userId } = useContext(AuthContext);\r\n//       const navigate = useNavigate();  \r\n//         const [userName, setUserName] = useState(localStorage.getItem(\"userName\") || \"\");\r\n\r\n//     useEffect(() => {\r\n//         fetchUsers();\r\n//     }, []);\r\n    \r\n//     const fetchUsers = async () => {\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             const res = await axios.get(\"http://localhost:8800/api/users\", {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             // 🔹 Exclude the logged-in user from the list\r\n//             const filteredUsers = res.data.filter(user => user.user_id !== userId);\r\n//             setUsers(filteredUsers);\r\n//         } catch (err) {\r\n//             console.error(\"❌ Error fetching users:\", err);\r\n//             alert(\"❌ Failed to fetch users.\");\r\n//         }\r\n//     };\r\n\r\n//     // ✅ Handle Adding a New User\r\n//     const handleAddUser = async (e) => {\r\n//         e.preventDefault();\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             if (!token) {\r\n//                 alert(\"❌ Unauthorized: Please log in again.\");\r\n//                 return;\r\n//             }\r\n\r\n//             if (!deptId) {\r\n//                 alert(\"❌ Department information missing. Please re-login.\");\r\n//                 return;\r\n//             }\r\n\r\n//             const response = await axios.post(\r\n//                 \"http://localhost:8800/api/register\",\r\n//                 {\r\n//                     username,\r\n//                     email,\r\n//                     password,\r\n//                     role,\r\n//                     dept_id: deptId, \r\n//                     research_area: role === \"professor\" ? researchArea : undefined\r\n//                 },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"✅ User added successfully!\");\r\n//             console.log(response.data);\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (error) {\r\n//             console.error(\"❌ Error adding user:\", error.response?.data || error);\r\n//             alert(error.response?.data?.message || \"❌ Failed to add user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ✅ Handle Updating a User\r\n//     const handleUpdateUser = async () => {\r\n//         if (!selectedUser) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n\r\n//             await axios.put(\r\n//                 `http://localhost:8800/api/update/${selectedUser}`,\r\n//                 { username, email, role },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             alert(\"✅ User updated successfully!\");\r\n//             fetchUsers();\r\n//             resetForm();\r\n//         } catch (err) {\r\n//             console.error(\"❌ Error updating user:\", err);\r\n//             alert(\"❌ Failed to update user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ✅ Handle Deleting a User\r\n//     const handleDeleteUser = async (user_id) => {\r\n//         if (!window.confirm(\"Are you sure you want to delete this user?\")) return;\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             await axios.delete(`http://localhost:8800/api/delete/${user_id}`, {\r\n//                 headers: { Authorization: `Bearer ${token}` }\r\n//             });\r\n\r\n//             alert(\"✅ User deleted successfully!\");\r\n//             fetchUsers();\r\n//         } catch (err) {\r\n//             console.error(\"❌ Error deleting user:\", err);\r\n//             alert(\"❌ Failed to delete user.\");\r\n//         }\r\n//     };\r\n\r\n//     // ✅ Reset Form Fields\r\n//     const resetForm = () => {\r\n//         setUsername(\"\");\r\n//         setEmail(\"\");\r\n//         setRole(\"\");\r\n//         setResearchArea(\"\");\r\n//         setPassword(\"\");\r\n//         setSelectedUser(null);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"manage-users-container\">\r\n\r\n//              {/* Top Header */}\r\n//                                                 <div className=\"top-header\">\r\n//                                                     <button className=\"back-button\" onClick={() => navigate(-1)}>← Back</button>\r\n//                                                     <h1 className=\"university-name\">Dharmshinh Desai University</h1>\r\n//                                                 </div>\r\n                                    \r\n//                                                 {/* Sidebar */}\r\n//                                                 <div className=\"sidebar\">\r\n//                                                     <FaUserCircle size={50} className=\"user-icon\" />\r\n//                                                     <p className=\"user-name\">{userName}</p>\r\n                                    \r\n//                                                     <div className=\"menu-options\">\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/dashboard\")}>Dashboard</button>\r\n//                                                         {(userRole === \"hod\" || userRole === \"admin\") && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-users\")}>Manage Users</button>\r\n//                                                         )}\r\n//                                                         {userRole === \"admin\" && (\r\n//                                                             <button className=\"menu-button\" onClick={() => navigate(\"/manage-inventory\")}>Manage Inventory</button>\r\n//                                                         )}\r\n//                                                         <button className=\"menu-button\" onClick={() => navigate(\"/settings\")}>⚙️ Settings</button>\r\n//                                                     </div>\r\n//                                                 </div>\r\n            \r\n//                     <div className=\"main-content\">\r\n//             <h2>Manage Users</h2>\r\n\r\n//             {/* Add User Form */}\r\n//             <div className=\"user-form\">\r\n//                 <h3>Add New User</h3>\r\n//                 <form onSubmit={handleAddUser}>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"\">Select Role</option>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     {role === \"professor\" && (\r\n//                         <input type=\"text\" placeholder=\"Research Area (Optional)\" value={researchArea} onChange={(e) => setResearchArea(e.target.value)} />\r\n//                     )}\r\n//                     <button type=\"submit\">Add User</button>\r\n//                 </form>\r\n//             </div>\r\n\r\n//             {/* User List */}\r\n//             <h3>Users List</h3>\r\n//             <table className=\"users-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>Username</th>\r\n//                         <th>Email</th>\r\n//                         <th>Role</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.user_id}>\r\n//                             <td>{user.user_name}</td>\r\n//                             <td>{user.user_email}</td>\r\n//                             <td>{user.role}</td>\r\n//                             <td>\r\n//                                 {/* 🔹 Prevent editing or deleting self */}\r\n//                                 {user.user_id !== userId && (\r\n//                                     <>\r\n//                                         <button onClick={() => { \r\n//                                             setSelectedUser(user.user_id); \r\n//                                             setUsername(user.user_name); \r\n//                                             setEmail(user.user_email); \r\n//                                             setRole(user.role); \r\n//                                         }}>\r\n//                                             ✏️ Edit\r\n//                                         </button>\r\n//                                         <button onClick={() => handleDeleteUser(user.user_id)}>🗑️ Delete</button>\r\n//                                     </>\r\n//                                 )}\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n\r\n//             {/* Update User Section */}\r\n//             {selectedUser && selectedUser !== userId && (\r\n//                 <div className=\"user-form\">\r\n//                     <h3>Update User</h3>\r\n//                     <input type=\"text\" placeholder=\"Username\" value={username} onChange={(e) => setUsername(e.target.value)} required />\r\n//                     <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n//                     <select value={role} onChange={(e) => setRole(e.target.value)} required>\r\n//                         <option value=\"admin\">Admin</option>\r\n//                         <option value=\"professor\">Professor</option>\r\n//                     </select>\r\n//                     <button onClick={handleUpdateUser}>Update User</button>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ManageUsers;\r\n\r\n"],"mappings":"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CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
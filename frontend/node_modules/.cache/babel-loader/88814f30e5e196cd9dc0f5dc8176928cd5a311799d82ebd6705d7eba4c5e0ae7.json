{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  userEmail\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:5000/notifications/${userEmail}`).then(res => res.json()).then(data => setNotifications(data)).catch(err => console.error(\"Error fetching notifications:\", err));\n  }, [userEmail]);\n  const markAsRead = async id => {\n    await fetch(\"http://localhost:5000/notifications/read\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n    setNotifications(notifications.filter(n => n.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No new notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [notif.message, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(notif.id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this)]\n      }, notif.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Notifications","userEmail","_s","notifications","setNotifications","fetch","then","res","json","data","catch","err","console","error","markAsRead","id","method","headers","body","JSON","stringify","filter","n","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","notif","message","onClick","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/frontend/src/pages/Notifications.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Notifications = ({ userEmail }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/notifications/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setNotifications(data))\r\n      .catch((err) => console.error(\"Error fetching notifications:\", err));\r\n  }, [userEmail]);\r\n\r\n  const markAsRead = async (id) => {\r\n    await fetch(\"http://localhost:5000/notifications/read\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    setNotifications(notifications.filter((n) => n.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"notifications-container\">\r\n      <h3>Notifications</h3>\r\n      {notifications.length === 0 ? (\r\n        <p>No new notifications</p>\r\n      ) : (\r\n        <ul>\r\n          {notifications.map((notif) => (\r\n            <li key={notif.id}>\r\n              {notif.message}\r\n              <button onClick={() => markAsRead(notif.id)}>Mark as Read</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,uCAAuCJ,SAAS,EAAE,CAAC,CACtDK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,gBAAgB,CAACK,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMa,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMV,KAAK,CAAC,0CAA0C,EAAE;MACtDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAG,CAAC;IAC7B,CAAC,CAAC;IACFX,gBAAgB,CAACD,aAAa,CAACkB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC5D,CAAC;EAED,oBACEhB,OAAA;IAAKwB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCzB,OAAA;MAAAyB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBzB,aAAa,CAAC0B,MAAM,KAAK,CAAC,gBACzB9B,OAAA;MAAAyB,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE3B7B,OAAA;MAAAyB,QAAA,EACGrB,aAAa,CAAC2B,GAAG,CAAEC,KAAK,iBACvBhC,OAAA;QAAAyB,QAAA,GACGO,KAAK,CAACC,OAAO,eACdjC,OAAA;UAAQkC,OAAO,EAAEA,CAAA,KAAMnB,UAAU,CAACiB,KAAK,CAAChB,EAAE,CAAE;UAAAS,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF3DG,KAAK,CAAChB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CApCIF,aAAa;AAAAkC,EAAA,GAAblC,aAAa;AAsCnB,eAAeA,aAAa;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\client\\\\src\\\\pages\\\\SuperAdminDashboard.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n\n// const SuperAdminDashboard = () => {\n//     const [professors, setProfessors] = useState([]);\n//     const [selectedProfessor, setSelectedProfessor] = useState(\"\");\n//     const [message, setMessage] = useState(\"\"); // ‚úÖ Store messages for better feedback\n//     const [loading, setLoading] = useState(false); // ‚úÖ Loading state for button\n\n//     useEffect(() => {\n//         const fetchProfessors = async () => {\n//             try {\n//                 const token = localStorage.getItem(\"token\");\n\n//                 if (!token) {\n//                     console.error(\"‚ùå No token found! Please log in again.\");\n//                     alert(\"Session expired. Please log in again.\");\n//                     return;\n//                 }\n\n//                 console.log(\"üîπ Using Token:\", token);\n\n//                 const response = await axios.get(\"http://localhost:8800/api/professors\", {\n//                     headers: { Authorization: `Bearer ${token}` } // ‚úÖ Include token\n//                 });\n\n//                 console.log(\"‚úÖ Professors fetched:\", response.data);\n//                 setProfessors(response.data);\n//             } catch (error) {\n//                 console.error(\"‚ùå Error fetching professors:\", error.response?.data || error);\n//                 alert(\"Failed to fetch professors. Check backend logs.\");\n//             }\n//         };\n\n//         fetchProfessors();\n//     }, []);\n\n//     const assignHOD = async () => {\n//         if (!selectedProfessor) {\n//             setMessage(\"‚ö†Ô∏è Please select a professor to assign as HOD.\");\n//             return;\n//         }\n\n//         setLoading(true);\n\n//         try {\n//             const token = localStorage.getItem(\"token\");\n//             if (!token) throw new Error(\"No token found!\");\n\n//             const response = await axios.put(\n//                 \"http://localhost:8800/api/superadmin/assign-hod\",\n//                 { user_id: selectedProfessor },\n//                 { headers: { Authorization: `Bearer ${token}` } }\n//             );\n\n//             console.log(\"‚úÖ HOD assigned successfully:\", response.data);\n//             setMessage(\"üéâ HOD assigned successfully!\");\n//             setSelectedProfessor(\"\");\n//         } catch (error) {\n//             console.error(\"‚ùå Error assigning HOD:\", error.response?.data || error);\n//             setMessage(\"‚ùå Failed to assign HOD.\");\n//         } finally {\n//             setLoading(false);\n//         }\n//     };\n\n//     return (\n//         <div>\n//             <h2>Super Admin Dashboard</h2>\n//             <h3>Assign Head of Department (HOD)</h3>\n\n//             {message && <p style={{ color: \"red\", fontWeight: \"bold\" }}>{message}</p>}\n\n//             <label>Select a Professor:</label>\n//             <select value={selectedProfessor} onChange={(e) => setSelectedProfessor(e.target.value)}>\n//                 <option value=\"\">Select Professor</option>\n//                 {professors.length > 0 ? (\n//                     professors.map((prof) => (\n//                         <option key={prof.user_id} value={prof.user_id}>\n//                             {prof.user_name} - {prof.user_email}\n//                         </option>\n//                     ))\n//                 ) : (\n//                     <option disabled>Loading professors...</option>\n//                 )}\n//             </select>\n\n//             <button onClick={assignHOD} disabled={loading || !selectedProfessor}>\n//                 {loading ? \"Assigning...\" : \"Assign as HOD\"}\n//             </button>\n//         </div>\n//     );\n// };\n\n// export default SuperAdminDashboard;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuperAdminDashboard = () => {\n  _s();\n  const [professors, setProfessors] = useState([]);\n  const [selectedProfessor, setSelectedProfessor] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    const fetchProfessors = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) throw new Error(\"No token found! Please log in again.\");\n        const response = await axios.get(\"http://localhost:8800/api/professors\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        setProfessors(response.data);\n      } catch (error) {\n        var _error$response;\n        console.error(\"‚ùå Error fetching professors:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error);\n        alert(\"Failed to fetch professors. Please check your login or backend.\");\n      }\n    };\n    fetchProfessors();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Super Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Assign Head of Department (HOD)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        fontWeight: \"bold\"\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select a Professor:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedProfessor,\n      onChange: e => setSelectedProfessor(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), professors.map(prof => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: prof.user_id,\n        children: [prof.user_name, \" - \", prof.user_email]\n      }, prof.user_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log(\"Assign HOD Logic Here\"),\n      children: \"Assign as HOD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(SuperAdminDashboard, \"otxAMHlkKAkUvoR7kys1VkGlR2s=\");\n_c = SuperAdminDashboard;\nexport default SuperAdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"SuperAdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SuperAdminDashboard","_s","professors","setProfessors","selectedProfessor","setSelectedProfessor","message","setMessage","loading","setLoading","fetchProfessors","token","localStorage","getItem","Error","response","get","headers","Authorization","data","error","_error$response","console","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontWeight","value","onChange","e","target","map","prof","user_id","user_name","user_email","onClick","log","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/client/src/pages/SuperAdminDashboard.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n\r\n// const SuperAdminDashboard = () => {\r\n//     const [professors, setProfessors] = useState([]);\r\n//     const [selectedProfessor, setSelectedProfessor] = useState(\"\");\r\n//     const [message, setMessage] = useState(\"\"); // ‚úÖ Store messages for better feedback\r\n//     const [loading, setLoading] = useState(false); // ‚úÖ Loading state for button\r\n\r\n//     useEffect(() => {\r\n//         const fetchProfessors = async () => {\r\n//             try {\r\n//                 const token = localStorage.getItem(\"token\");\r\n                \r\n//                 if (!token) {\r\n//                     console.error(\"‚ùå No token found! Please log in again.\");\r\n//                     alert(\"Session expired. Please log in again.\");\r\n//                     return;\r\n//                 }\r\n        \r\n//                 console.log(\"üîπ Using Token:\", token);\r\n        \r\n//                 const response = await axios.get(\"http://localhost:8800/api/professors\", {\r\n//                     headers: { Authorization: `Bearer ${token}` } // ‚úÖ Include token\r\n//                 });\r\n        \r\n//                 console.log(\"‚úÖ Professors fetched:\", response.data);\r\n//                 setProfessors(response.data);\r\n//             } catch (error) {\r\n//                 console.error(\"‚ùå Error fetching professors:\", error.response?.data || error);\r\n//                 alert(\"Failed to fetch professors. Check backend logs.\");\r\n//             }\r\n//         };\r\n        \r\n\r\n//         fetchProfessors();\r\n//     }, []);\r\n\r\n//     const assignHOD = async () => {\r\n//         if (!selectedProfessor) {\r\n//             setMessage(\"‚ö†Ô∏è Please select a professor to assign as HOD.\");\r\n//             return;\r\n//         }\r\n\r\n//         setLoading(true);\r\n\r\n//         try {\r\n//             const token = localStorage.getItem(\"token\");\r\n//             if (!token) throw new Error(\"No token found!\");\r\n\r\n//             const response = await axios.put(\r\n//                 \"http://localhost:8800/api/superadmin/assign-hod\",\r\n//                 { user_id: selectedProfessor },\r\n//                 { headers: { Authorization: `Bearer ${token}` } }\r\n//             );\r\n\r\n//             console.log(\"‚úÖ HOD assigned successfully:\", response.data);\r\n//             setMessage(\"üéâ HOD assigned successfully!\");\r\n//             setSelectedProfessor(\"\");\r\n//         } catch (error) {\r\n//             console.error(\"‚ùå Error assigning HOD:\", error.response?.data || error);\r\n//             setMessage(\"‚ùå Failed to assign HOD.\");\r\n//         } finally {\r\n//             setLoading(false);\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Super Admin Dashboard</h2>\r\n//             <h3>Assign Head of Department (HOD)</h3>\r\n\r\n//             {message && <p style={{ color: \"red\", fontWeight: \"bold\" }}>{message}</p>}\r\n\r\n//             <label>Select a Professor:</label>\r\n//             <select value={selectedProfessor} onChange={(e) => setSelectedProfessor(e.target.value)}>\r\n//                 <option value=\"\">Select Professor</option>\r\n//                 {professors.length > 0 ? (\r\n//                     professors.map((prof) => (\r\n//                         <option key={prof.user_id} value={prof.user_id}>\r\n//                             {prof.user_name} - {prof.user_email}\r\n//                         </option>\r\n//                     ))\r\n//                 ) : (\r\n//                     <option disabled>Loading professors...</option>\r\n//                 )}\r\n//             </select>\r\n\r\n//             <button onClick={assignHOD} disabled={loading || !selectedProfessor}>\r\n//                 {loading ? \"Assigning...\" : \"Assign as HOD\"}\r\n//             </button>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default SuperAdminDashboard;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SuperAdminDashboard = () => {\r\n    const [professors, setProfessors] = useState([]);\r\n    const [selectedProfessor, setSelectedProfessor] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\"); \r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchProfessors = async () => {\r\n            try {\r\n                const token = localStorage.getItem(\"token\");\r\n                if (!token) throw new Error(\"No token found! Please log in again.\");\r\n                \r\n                const response = await axios.get(\"http://localhost:8800/api/professors\", {\r\n                    headers: { Authorization: `Bearer ${token}` }\r\n                });\r\n\r\n                setProfessors(response.data);\r\n            } catch (error) {\r\n                console.error(\"‚ùå Error fetching professors:\", error.response?.data || error);\r\n                alert(\"Failed to fetch professors. Please check your login or backend.\");\r\n            }\r\n        };\r\n\r\n        fetchProfessors();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Super Admin Dashboard</h2>\r\n            <h3>Assign Head of Department (HOD)</h3>\r\n\r\n            {message && <p style={{ color: \"red\", fontWeight: \"bold\" }}>{message}</p>}\r\n\r\n            <label>Select a Professor:</label>\r\n            <select value={selectedProfessor} onChange={(e) => setSelectedProfessor(e.target.value)}>\r\n                <option value=\"\">Select Professor</option>\r\n                {professors.map(prof => (\r\n                    <option key={prof.user_id} value={prof.user_id}>\r\n                        {prof.user_name} - {prof.user_email}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n\r\n            <button onClick={() => console.log(\"Assign HOD Logic Here\")}>Assign as HOD</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuperAdminDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
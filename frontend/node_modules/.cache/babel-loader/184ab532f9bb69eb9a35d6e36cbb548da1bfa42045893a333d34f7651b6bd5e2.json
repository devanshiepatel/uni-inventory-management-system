{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\om\\\\Desktop\\\\uims - Copy\\\\frontend\\\\src\\\\pages\\\\Notifications.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = ({\n  userEmail\n}) => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:8800/notifications/${userEmail}`).then(res => res.json()).then(data => setNotifications(data)).catch(err => console.error(\"Error fetching notifications:\", err));\n  }, [userEmail]);\n  const markAsRead = async id => {\n    await fetch(\"http://localhost:8800/notifications/read\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id\n      })\n    });\n    setNotifications(notifications.filter(n => n.id !== id));\n  };\n\n  // return (\n  //   <div className=\"notifications-container\">\n  //     <h3>Notifications</h3>\n  //     {notifications.length === 0 ? (\n  //       <p>No new notifications</p>\n  //     ) : (\n  //       <ul>\n  //         {notifications.map((notif) => (\n  //           <li key={notif.id}>\n  //             {notif.message}\n  //             <button onClick={() => markAsRead(notif.id)}>Mark as Read</button>\n  //           </li>\n  //         ))}\n  //       </ul>\n  //     )}\n  //   </div>\n  // );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notifications-container\",\n    style: {\n      marginTop: \"20px\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginBottom: \"10px\",\n        color: \"#ffffff\"\n      },\n      children: \"\\uD83D\\uDD14 Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#9CA3AF\",\n        fontSize: \"14px\"\n      },\n      children: \"No new notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: \"none\",\n        padding: 0\n      },\n      children: notifications.map(notif => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          backgroundColor: \"#374151\",\n          color: \"#F9FAFB\",\n          padding: \"10px\",\n          borderRadius: \"5px\",\n          marginBottom: \"10px\",\n          fontSize: \"13px\"\n        },\n        children: notif.message\n      }, notif.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"6gMUc0OfbF4zJu51/S5RmKCczuA=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Notifications","userEmail","_s","notifications","setNotifications","fetch","then","res","json","data","catch","err","console","error","markAsRead","id","method","headers","body","JSON","stringify","filter","n","className","style","marginTop","width","children","marginBottom","color","fileName","_jsxFileName","lineNumber","columnNumber","length","fontSize","listStyleType","padding","map","notif","backgroundColor","borderRadius","message","_c","$RefreshReg$"],"sources":["C:/Users/om/Desktop/uims - Copy/frontend/src/pages/Notifications.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst Notifications = ({ userEmail }) => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`http://localhost:8800/notifications/${userEmail}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setNotifications(data))\r\n      .catch((err) => console.error(\"Error fetching notifications:\", err));\r\n  }, [userEmail]);\r\n\r\n  const markAsRead = async (id) => {\r\n    await fetch(\"http://localhost:8800/notifications/read\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ id }),\r\n    });\r\n    setNotifications(notifications.filter((n) => n.id !== id));\r\n  };\r\n\r\n  // return (\r\n  //   <div className=\"notifications-container\">\r\n  //     <h3>Notifications</h3>\r\n  //     {notifications.length === 0 ? (\r\n  //       <p>No new notifications</p>\r\n  //     ) : (\r\n  //       <ul>\r\n  //         {notifications.map((notif) => (\r\n  //           <li key={notif.id}>\r\n  //             {notif.message}\r\n  //             <button onClick={() => markAsRead(notif.id)}>Mark as Read</button>\r\n  //           </li>\r\n  //         ))}\r\n  //       </ul>\r\n  //     )}\r\n  //   </div>\r\n  // );\r\n  return (\r\n    <div className=\"notifications-container\" style={{ marginTop: \"20px\", width: \"100%\" }}>\r\n      <h4 style={{ marginBottom: \"10px\", color: \"#ffffff\" }}>ðŸ”” Notifications</h4>\r\n      {notifications.length === 0 ? (\r\n        <p style={{ color: \"#9CA3AF\", fontSize: \"14px\" }}>No new notifications</p>\r\n      ) : (\r\n        <ul style={{ listStyleType: \"none\", padding: 0 }}>\r\n          {notifications.map((notif) => (\r\n            <li key={notif.id} style={{\r\n              backgroundColor: \"#374151\",\r\n              color: \"#F9FAFB\",\r\n              padding: \"10px\",\r\n              borderRadius: \"5px\",\r\n              marginBottom: \"10px\",\r\n              fontSize: \"13px\"\r\n            }}>\r\n              {notif.message}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACdS,KAAK,CAAC,uCAAuCJ,SAAS,EAAE,CAAC,CACtDK,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKL,gBAAgB,CAACK,IAAI,CAAC,CAAC,CACtCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEF,GAAG,CAAC,CAAC;EACxE,CAAC,EAAE,CAACV,SAAS,CAAC,CAAC;EAEf,MAAMa,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC/B,MAAMV,KAAK,CAAC,0CAA0C,EAAE;MACtDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL;MAAG,CAAC;IAC7B,CAAC,CAAC;IACFX,gBAAgB,CAACD,aAAa,CAACkB,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC5D,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACEhB,OAAA;IAAKwB,SAAS,EAAC,yBAAyB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnF5B,OAAA;MAAIyB,KAAK,EAAE;QAAEI,YAAY,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAF,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3E9B,aAAa,CAAC+B,MAAM,KAAK,CAAC,gBACzBnC,OAAA;MAAGyB,KAAK,EAAE;QAAEK,KAAK,EAAE,SAAS;QAAEM,QAAQ,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAC;IAAoB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1ElC,OAAA;MAAIyB,KAAK,EAAE;QAAEY,aAAa,EAAE,MAAM;QAAEC,OAAO,EAAE;MAAE,CAAE;MAAAV,QAAA,EAC9CxB,aAAa,CAACmC,GAAG,CAAEC,KAAK,iBACvBxC,OAAA;QAAmByB,KAAK,EAAE;UACxBgB,eAAe,EAAE,SAAS;UAC1BX,KAAK,EAAE,SAAS;UAChBQ,OAAO,EAAE,MAAM;UACfI,YAAY,EAAE,KAAK;UACnBb,YAAY,EAAE,MAAM;UACpBO,QAAQ,EAAE;QACZ,CAAE;QAAAR,QAAA,EACCY,KAAK,CAACG;MAAO,GARPH,KAAK,CAACxB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAC/B,EAAA,CA5DIF,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AA8DnB,eAAeA,aAAa;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}